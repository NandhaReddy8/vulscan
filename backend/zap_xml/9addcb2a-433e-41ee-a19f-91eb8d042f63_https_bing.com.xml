<?xml version="1.0"?>
<OWASPZAPReport programName="ZAP" version="2.16.1" generated="Thu, 24 Apr 2025 14:27:36">
	
		<site name="https://www.bing.com" host="www.bing.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-13</alertRef>
						<alert>CSP: Failure to Define Directive with No Fallback</alert>
						<name>CSP: Failure to Define Directive with No Fallback</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The Content Security Policy fails to define one of the directives that has no fallback. Missing/excluding them is the same as allowing anything.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-A/46HUiTtn/LAiJPsGfb6283mcAbjyFa3nQGtZno2VE=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-Hhu6zBNX+3AvwkIb/klh7DRBcgcwfHJ3O6IuGctDbXI=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-4</alertRef>
						<alert>CSP: Wildcard Directive</alert>
						<name>CSP: Wildcard Directive</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-A/46HUiTtn/LAiJPsGfb6283mcAbjyFa3nQGtZno2VE=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-Hhu6zBNX+3AvwkIb/klh7DRBcgcwfHJ3O6IuGctDbXI=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:&lt;/p&gt;&lt;p&gt;style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-6</alertRef>
						<alert>CSP: style-src unsafe-inline</alert>
						<name>CSP: style-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-A/46HUiTtn/LAiJPsGfb6283mcAbjyFa3nQGtZno2VE=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-Hhu6zBNX+3AvwkIb/klh7DRBcgcwfHJ3O6IuGctDbXI=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;style-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10010</pluginid>
						<alertRef>10010</alertRef>
						<alert>Cookie No HttpOnly Flag</alert>
						<name>Cookie No HttpOnly Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>_HPVN</param>
									<attack></attack>
									<evidence>Set-Cookie: _HPVN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>_SS</param>
									<attack></attack>
									<evidence>Set-Cookie: _SS</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHD</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHD</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHHPGUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHHPGUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHUID</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>_HPVN</param>
									<attack></attack>
									<evidence>Set-Cookie: _HPVN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>_SS</param>
									<attack></attack>
									<evidence>Set-Cookie: _SS</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHD</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHD</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHHPGUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHHPGUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHUID</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Ensure that the HttpOnly flag is set for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-community/HttpOnly&lt;/p&gt;</reference>
						<cweid>1004</cweid>
						<wascid>13</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10011</pluginid>
						<alertRef>10011</alertRef>
						<alert>Cookie Without Secure Flag</alert>
						<name>Cookie Without Secure Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>_HPVN</param>
									<attack></attack>
									<evidence>Set-Cookie: _HPVN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>_SS</param>
									<attack></attack>
									<evidence>Set-Cookie: _SS</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHD</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHD</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHHPGUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHHPGUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHUID</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>_HPVN</param>
									<attack></attack>
									<evidence>Set-Cookie: _HPVN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>_SS</param>
									<attack></attack>
									<evidence>Set-Cookie: _SS</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHD</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHD</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHHPGUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHHPGUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHUID</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;</reference>
						<cweid>614</cweid>
						<wascid>13</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10054</pluginid>
						<alertRef>10054-1</alertRef>
						<alert>Cookie without SameSite Attribute</alert>
						<name>Cookie without SameSite Attribute</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a &apos;cross-site&apos; request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>_HPVN</param>
									<attack></attack>
									<evidence>Set-Cookie: _HPVN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>_SS</param>
									<attack></attack>
									<evidence>Set-Cookie: _SS</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHD</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHD</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHHPGUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHHPGUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHUID</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>_HPVN</param>
									<attack></attack>
									<evidence>Set-Cookie: _HPVN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>_SS</param>
									<attack></attack>
									<evidence>Set-Cookie: _SS</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHD</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHD</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHHPGUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHHPGUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHUID</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHUSR</param>
									<attack></attack>
									<evidence>Set-Cookie: SRCHUSR</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Ensure that the SameSite attribute is set to either &apos;lax&apos; or ideally &apos;strict&apos; for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site&lt;/p&gt;</reference>
						<cweid>1275</cweid>
						<wascid>13</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10017</pluginid>
						<alertRef>10017</alertRef>
						<alert>Cross-Domain JavaScript Source File Inclusion</alert>
						<name>Cross-Domain JavaScript Source File Inclusion</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The page includes one or more script files from a third-party domain.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>https://r.bing.com/rb/5U/jnc,nj/04D6LGslKD98GSm_bv0hExJTdDc.js?bu=Bt0E4QTjBKAEywTqBA&amp;or=w</param>
									<attack></attack>
									<evidence>&lt;script type=&quot;text/javascript&quot; crossorigin=&quot;anonymous&quot; nonce=&quot;A/46HUiTtn/LAiJPsGfb6283mcAbjyFa3nQGtZno2VE=&quot; src=&quot;https://r.bing.com/rb/5U/jnc,nj/04D6LGslKD98GSm_bv0hExJTdDc.js?bu=Bt0E4QTjBKAEywTqBA&amp;or=w&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>https://r.bing.com/rs/6r/fL/jnc,nj/tlifxqsNyCzxIJnRwtQKuZToQQw.js?or=w</param>
									<attack></attack>
									<evidence>&lt;script type=&quot;text/javascript&quot; crossorigin=&quot;anonymous&quot; nonce=&quot;A/46HUiTtn/LAiJPsGfb6283mcAbjyFa3nQGtZno2VE=&quot; src=&quot;https://r.bing.com/rs/6r/fL/jnc,nj/tlifxqsNyCzxIJnRwtQKuZToQQw.js?or=w&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>https://r.bing.com/rb/5U/jnc,nj/04D6LGslKD98GSm_bv0hExJTdDc.js?bu=Bt0E4QTjBKAEywTqBA&amp;or=w</param>
									<attack></attack>
									<evidence>&lt;script type=&quot;text/javascript&quot; crossorigin=&quot;anonymous&quot; nonce=&quot;Hhu6zBNX+3AvwkIb/klh7DRBcgcwfHJ3O6IuGctDbXI=&quot; src=&quot;https://r.bing.com/rb/5U/jnc,nj/04D6LGslKD98GSm_bv0hExJTdDc.js?bu=Bt0E4QTjBKAEywTqBA&amp;or=w&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>https://r.bing.com/rs/6r/fL/jnc,nj/tlifxqsNyCzxIJnRwtQKuZToQQw.js?or=w</param>
									<attack></attack>
									<evidence>&lt;script type=&quot;text/javascript&quot; crossorigin=&quot;anonymous&quot; nonce=&quot;Hhu6zBNX+3AvwkIb/klh7DRBcgcwfHJ3O6IuGctDbXI=&quot; src=&quot;https://r.bing.com/rs/6r/fL/jnc,nj/tlifxqsNyCzxIJnRwtQKuZToQQw.js?or=w&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure JavaScript source files are loaded from only trusted sources, and the sources can&apos;t be controlled by end users of the application.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>829</cweid>
						<wascid>15</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10096</pluginid>
						<alertRef>10096</alertRef>
						<alert>Timestamp Disclosure - Unix</alert>
						<name>Timestamp Disclosure - Unix</name>
						<riskcode>1</riskcode>
						<confidence>1</confidence>
						<riskdesc>Low (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;A timestamp was disclosed by the application/web server. - Unix&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>1745484796</evidence>
									<otherinfo>1745484796, which evaluates to: 2025-04-24 14:23:16.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>X-CDN-TraceID</param>
									<attack></attack>
									<evidence>1745484795</evidence>
									<otherinfo>1745484795, which evaluates to: 2025-04-24 14:23:15.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>1745485051</evidence>
									<otherinfo>1745485051, which evaluates to: 2025-04-24 14:27:31.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>X-CDN-TraceID</param>
									<attack></attack>
									<evidence>1745485051</evidence>
									<otherinfo>1745485051, which evaluates to: 2025-04-24 14:27:31.</otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;1745484796, which evaluates to: 2025-04-24 14:23:16.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cwe.mitre.org/data/definitions/200.html&lt;/p&gt;</reference>
						<cweid>497</cweid>
						<wascid>13</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10021</pluginid>
						<alertRef>10021</alertRef>
						<alert>X-Content-Type-Options Header Missing</alert>
						<name>X-Content-Type-Options Header Missing</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to &apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in likely comment: &quot;//platform.bing.com/geo/REST/v1/Imagery/Map/RoadVibrant/59.849083,-150.187836/4?key=AsSOKo7OOz5VAtfAj0rjgaXlhCrCZI6PGbLj7GCH8IW2&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in likely comment: &quot;//platform.bing.com/geo/REST/v1/Imagery/Map/RoadVibrant/59.849083,-150.187836/4?key=AsSOKo7OOz5VAtfAj0rjgaXlhCrCZI6PGbLj7GCH8IW2&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bSELECT\b and was detected in likely comment: &quot;//platform.bing.com/geo/REST/v1/Imagery/Map/RoadVibrant/59.849083,-150.187836/4?key=AsSOKo7OOz5VAtfAj0rjgaXlhCrCZI6PGbLj7GCH8IW2&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>615</cweid>
						<wascid>13</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90033</pluginid>
						<alertRef>90033</alertRef>
						<alert>Loosely Scoped Cookie</alert>
						<name>Loosely Scoped Cookie</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>The origin domain used for comparison was:
www.bing.com
SRCHD=AF=NOFORM
SRCHUID=V=2&amp;GUID=56E5B2548AD1437EA3787397D3F82559&amp;dmnchg=1
SRCHUSR=DOB=20250424
SRCHHPGUSR=SRCHLANG=en&amp;IG=77DAB633703F4239B3FAD8436C92EAF6
_SS=SID=3D743CCAD42B6F5E29142912D5C36E90
ULC=
_HPVN=CS=eyJQbiI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiUCJ9LCJTYyI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiSCJ9LCJReiI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiVCJ9LCJBcCI6dHJ1ZSwiTXV0ZSI6dHJ1ZSwiTGFkIjoiMjAyNS0wNC0yNFQwMDowMDowMFoiLCJJb3RkIjowLCJHd2IiOjAsIlRucyI6MCwiRGZ0IjpudWxsLCJNdnMiOjAsIkZsdCI6MCwiSW1wIjoxLCJUb2JuIjowfQ==
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>The origin domain used for comparison was:
www.bing.com
SRCHD=AF=NOFORM
SRCHUID=V=2&amp;GUID=18F81E982A134DD6A1BAF7A2FCB11E19&amp;dmnchg=1
SRCHUSR=DOB=20250424
SRCHHPGUSR=SRCHLANG=en&amp;IG=9C44B322EEB447C2918F775D24BBA864
_SS=SID=0576315F793F674A3F91248778D76626
ULC=
_HPVN=CS=eyJQbiI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiUCJ9LCJTYyI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiSCJ9LCJReiI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiVCJ9LCJBcCI6dHJ1ZSwiTXV0ZSI6dHJ1ZSwiTGFkIjoiMjAyNS0wNC0yNFQwMDowMDowMFoiLCJJb3RkIjowLCJHd2IiOjAsIlRucyI6MCwiRGZ0IjpudWxsLCJNdnMiOjAsIkZsdCI6MCwiSW1wIjoxLCJUb2JuIjowfQ==
</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Always scope cookies to a FQDN (Fully Qualified Domain Name).&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The origin domain used for comparison was:&lt;/p&gt;&lt;p&gt;www.bing.com&lt;/p&gt;&lt;p&gt;SRCHD=AF=NOFORM&lt;/p&gt;&lt;p&gt;SRCHUID=V=2&amp;GUID=56E5B2548AD1437EA3787397D3F82559&amp;dmnchg=1&lt;/p&gt;&lt;p&gt;SRCHUSR=DOB=20250424&lt;/p&gt;&lt;p&gt;SRCHHPGUSR=SRCHLANG=en&amp;IG=77DAB633703F4239B3FAD8436C92EAF6&lt;/p&gt;&lt;p&gt;_SS=SID=3D743CCAD42B6F5E29142912D5C36E90&lt;/p&gt;&lt;p&gt;ULC=&lt;/p&gt;&lt;p&gt;_HPVN=CS=eyJQbiI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiUCJ9LCJTYyI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiSCJ9LCJReiI6eyJDbiI6MSwiU3QiOjAsIlFzIjowLCJQcm9kIjoiVCJ9LCJBcCI6dHJ1ZSwiTXV0ZSI6dHJ1ZSwiTGFkIjoiMjAyNS0wNC0yNFQwMDowMDowMFoiLCJJb3RkIjowLCJHd2IiOjAsIlRucyI6MCwiRGZ0IjpudWxsLCJNdnMiOjAsIkZsdCI6MCwiSW1wIjoxLCJUb2JuIjowfQ==&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc6265#section-4.1&lt;/p&gt;&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;&lt;p&gt;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies&lt;/p&gt;</reference>
						<cweid>565</cweid>
						<wascid>15</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>private</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>private</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10112</pluginid>
						<alertRef>10112</alertRef>
						<alert>Session Management Response Identified</alert>
						<name>Session Management Response Identified</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The given response has been identified as containing a session management token. The &apos;Other Info&apos; field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to &quot;Auto-Detect&quot; then this rule will change the session management to use the tokens identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=9B53F85C657A495BA6D00F50BDA3BAD1</uri>
									<method>GET</method>
									<param>SRCHUSR</param>
									<attack></attack>
									<evidence>DOB=20250424</evidence>
									<otherinfo>
cookie:SRCHUSR
cookie:_SS
cookie:SRCHHPGUSR
cookie:SRCHUID
cookie:_HPVN</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.bing.com/?toWww=1&amp;redig=C81EA65EB683481F97FF48A2821CE06B</uri>
									<method>GET</method>
									<param>SRCHUSR</param>
									<attack></attack>
									<evidence>DOB=20250424</evidence>
									<otherinfo>
cookie:SRCHUSR
cookie:_SS
cookie:SRCHHPGUSR
cookie:SRCHUID
cookie:_HPVN</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;&lt;/p&gt;&lt;p&gt;cookie:SRCHUSR&lt;/p&gt;&lt;p&gt;cookie:_SS&lt;/p&gt;&lt;p&gt;cookie:SRCHHPGUSR&lt;/p&gt;&lt;p&gt;cookie:SRCHUID&lt;/p&gt;&lt;p&gt;cookie:_HPVN&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1448</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://bing.com" host="bing.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-13</alertRef>
						<alert>CSP: Failure to Define Directive with No Fallback</alert>
						<name>CSP: Failure to Define Directive with No Fallback</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The Content Security Policy fails to define one of the directives that has no fallback. Missing/excluding them is the same as allowing anything.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-IhOySjGWzsVljU7j30pNckJFUeWrpAIgnK71jh5wuwY=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-uxSgxTPFUxU5LmIX2U5xVAorNR6Ru1sBsE6Yq13o1V0=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-48SR8HLYjHrWCNNmI/wnH4jx+t4ol/DuaRjwqw0f9+8=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-VhWTpQe9fV1deEbSA6EiCRSNCk40M4h9Vky8hEOV9ug=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-tNpuXahNrw0G4EU+BTQ0XO8b7iDq806crc6VCDmoejs=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-waUPOH+CkbW8Xp/FgAimNypAe4xZ2m2ls7Bb8IFMIyE=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-TnN43M+E64NaKI11pwMCNWF4s0A3DuB4yxCv6QwMTUI=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-WK8rwE/VcSLDv34c5xAiLkF7O7SuURjXXXUbJIHgUDY=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-GsVzt8NrDh3MZvOGV2bPJ6zsngIYt2KGq7p1+Iub7sk=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-iNBOk8J/F24SeySjCzxM83ysSQlSd2xo6wYNfD+Klas=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The directive(s): frame-ancestors, form-action is/are among the directives that do not fallback to default-src.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1454</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-4</alertRef>
						<alert>CSP: Wildcard Directive</alert>
						<name>CSP: Wildcard Directive</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-IhOySjGWzsVljU7j30pNckJFUeWrpAIgnK71jh5wuwY=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-uxSgxTPFUxU5LmIX2U5xVAorNR6Ru1sBsE6Yq13o1V0=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-48SR8HLYjHrWCNNmI/wnH4jx+t4ol/DuaRjwqw0f9+8=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-VhWTpQe9fV1deEbSA6EiCRSNCk40M4h9Vky8hEOV9ug=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-tNpuXahNrw0G4EU+BTQ0XO8b7iDq806crc6VCDmoejs=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-waUPOH+CkbW8Xp/FgAimNypAe4xZ2m2ls7Bb8IFMIyE=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-TnN43M+E64NaKI11pwMCNWF4s0A3DuB4yxCv6QwMTUI=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-WK8rwE/VcSLDv34c5xAiLkF7O7SuURjXXXUbJIHgUDY=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-GsVzt8NrDh3MZvOGV2bPJ6zsngIYt2KGq7p1+Iub7sk=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-iNBOk8J/F24SeySjCzxM83ysSQlSd2xo6wYNfD+Klas=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:&lt;/p&gt;&lt;p&gt;style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1454</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-6</alertRef>
						<alert>CSP: style-src unsafe-inline</alert>
						<name>CSP: style-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-IhOySjGWzsVljU7j30pNckJFUeWrpAIgnK71jh5wuwY=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-uxSgxTPFUxU5LmIX2U5xVAorNR6Ru1sBsE6Yq13o1V0=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-48SR8HLYjHrWCNNmI/wnH4jx+t4ol/DuaRjwqw0f9+8=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-VhWTpQe9fV1deEbSA6EiCRSNCk40M4h9Vky8hEOV9ug=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-tNpuXahNrw0G4EU+BTQ0XO8b7iDq806crc6VCDmoejs=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-waUPOH+CkbW8Xp/FgAimNypAe4xZ2m2ls7Bb8IFMIyE=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-TnN43M+E64NaKI11pwMCNWF4s0A3DuB4yxCv6QwMTUI=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-WK8rwE/VcSLDv34c5xAiLkF7O7SuURjXXXUbJIHgUDY=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-GsVzt8NrDh3MZvOGV2bPJ6zsngIYt2KGq7p1+Iub7sk=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>script-src https: &apos;strict-dynamic&apos; &apos;report-sample&apos; &apos;wasm-unsafe-eval&apos; &apos;nonce-iNBOk8J/F24SeySjCzxM83ysSQlSd2xo6wYNfD+Klas=&apos;; base-uri &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;style-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1454</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10010</pluginid>
						<alertRef>10010</alertRef>
						<alert>Cookie No HttpOnly Flag</alert>
						<name>Cookie No HttpOnly Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>MUID</param>
									<attack></attack>
									<evidence>Set-Cookie: MUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUID</param>
									<attack></attack>
									<evidence>Set-Cookie: MUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>MUID</param>
									<attack></attack>
									<evidence>Set-Cookie: MUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>MUID</param>
									<attack></attack>
									<evidence>Set-Cookie: MUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>16</count>
						<solution>&lt;p&gt;Ensure that the HttpOnly flag is set for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-community/HttpOnly&lt;/p&gt;</reference>
						<cweid>1004</cweid>
						<wascid>13</wascid>
						<sourceid>1454</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10011</pluginid>
						<alertRef>10011</alertRef>
						<alert>Cookie Without Secure Flag</alert>
						<name>Cookie Without Secure Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;</reference>
						<cweid>614</cweid>
						<wascid>13</wascid>
						<sourceid>1454</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10054</pluginid>
						<alertRef>10054-2</alertRef>
						<alert>Cookie with SameSite Attribute None</alert>
						<name>Cookie with SameSite Attribute None</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set with its SameSite attribute set to &quot;none&quot;, which means that the cookie can be sent as a result of a &apos;cross-site&apos; request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>MUID</param>
									<attack></attack>
									<evidence>Set-Cookie: MUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUID</param>
									<attack></attack>
									<evidence>Set-Cookie: MUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>MUID</param>
									<attack></attack>
									<evidence>Set-Cookie: MUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>MUID</param>
									<attack></attack>
									<evidence>Set-Cookie: MUID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that the SameSite attribute is set to either &apos;lax&apos; or ideally &apos;strict&apos; for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site&lt;/p&gt;</reference>
						<cweid>1275</cweid>
						<wascid>13</wascid>
						<sourceid>1454</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10054</pluginid>
						<alertRef>10054-1</alertRef>
						<alert>Cookie without SameSite Attribute</alert>
						<name>Cookie without SameSite Attribute</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a &apos;cross-site&apos; request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>_EDGE_S</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_S</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>_EDGE_V</param>
									<attack></attack>
									<evidence>Set-Cookie: _EDGE_V</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>Set-Cookie: MUIDB</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>12</count>
						<solution>&lt;p&gt;Ensure that the SameSite attribute is set to either &apos;lax&apos; or ideally &apos;strict&apos; for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site&lt;/p&gt;</reference>
						<cweid>1275</cweid>
						<wascid>13</wascid>
						<sourceid>1454</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035-1</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;https://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>1457</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10112</pluginid>
						<alertRef>10112</alertRef>
						<alert>Session Management Response Identified</alert>
						<name>Session Management Response Identified</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The given response has been identified as containing a session management token. The &apos;Other Info&apos; field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to &quot;Auto-Detect&quot; then this rule will change the session management to use the tokens identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>222DEF1955046FD0293FFAC154EC6E33</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>28BD3EB5D80C64023C1A2B6DD9E465B6</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>21AB845E6D78696C2DE091866C9068FA</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>27D402344C3C69490D5617EC4DD468A7</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>30AFF5D5C0576CFD2169E00DC1BF6D2A</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>34B66EAB3290633B08027B7333786211</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>087C74B92FB26B3F25DF61612E5A6ADC</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/robots.txt</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>3335F5EE371360D0157DE03636FB61DA</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>144564E913546E752EC8713112BC6FFB</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://bing.com/sitemap.xml</uri>
									<method>GET</method>
									<param>MUIDB</param>
									<attack></attack>
									<evidence>1B3FF808E2676F09147BEDD0E38F6E4C</evidence>
									<otherinfo>
cookie:MUIDB
cookie:MUID
cookie:_EDGE_S</otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;&lt;/p&gt;&lt;p&gt;cookie:MUIDB&lt;/p&gt;&lt;p&gt;cookie:MUID&lt;/p&gt;&lt;p&gt;cookie:_EDGE_S&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1464</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://google.com" host="google.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035-1</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://google.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://google.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://google.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://google.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;https://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>1444</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10050</pluginid>
						<alertRef>10050-2</alertRef>
						<alert>Retrieved from Cache</alert>
						<name>Retrieved from Cache</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as &quot;proxy&quot; caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://google.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Age: 714</evidence>
									<otherinfo>The presence of the &apos;Age&apos; header indicates that a HTTP/1.1 compliant caching server is in use.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:&lt;/p&gt;&lt;p&gt;Cache-Control: no-cache, no-store, must-revalidate, private&lt;/p&gt;&lt;p&gt;Pragma: no-cache&lt;/p&gt;&lt;p&gt;Expires: 0&lt;/p&gt;&lt;p&gt;This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The presence of the &apos;Age&apos; header indicates that a HTTP/1.1 compliant caching server is in use.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;https://www.rfc-editor.org/rfc/rfc9110.html&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1442</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://nursing.hhnsystem.com" host="nursing.hhnsystem.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-13</alertRef>
						<alert>CSP: Failure to Define Directive with No Fallback</alert>
						<name>CSP: Failure to Define Directive with No Fallback</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The Content Security Policy fails to define one of the directives that has no fallback. Missing/excluding them is the same as allowing anything.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
						</instances>
						<count>16</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The directive(s): form-action is/are among the directives that do not fallback to default-src.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1404</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-4</alertRef>
						<alert>CSP: Wildcard Directive</alert>
						<name>CSP: Wildcard Directive</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
						</instances>
						<count>16</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:&lt;/p&gt;&lt;p&gt;script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1404</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-5</alertRef>
						<alert>CSP: script-src unsafe-inline</alert>
						<name>CSP: script-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>16</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;script-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1404</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-6</alertRef>
						<alert>CSP: style-src unsafe-inline</alert>
						<name>CSP: style-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos;;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>16</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;style-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1404</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10098</pluginid>
						<alertRef>10098</alertRef>
						<alert>Cross-Domain Misconfiguration</alert>
						<name>Cross-Domain Misconfiguration</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;Web browser data loading may be possible, due to a Cross Origin Resource Sharing (CORS) misconfiguration on the web server.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>Access-Control-Allow-Origin: *</evidence>
									<otherinfo>The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.</otherinfo>
								</instance>
							
						</instances>
						<count>8</count>
						<solution>&lt;p&gt;Ensure that sensitive data is not available in an unauthenticated manner (using IP address white-listing, for instance).&lt;/p&gt;&lt;p&gt;Configure the &quot;Access-Control-Allow-Origin&quot; HTTP header to a more restrictive set of domains, or remove all CORS headers entirely, to allow the web browser to enforce the Same Origin Policy (SOP) in a more restrictive manner.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The CORS misconfiguration on the web server permits cross-domain read requests from arbitrary third party domains, using unauthenticated APIs on this domain. Web browser implementations do not permit arbitrary third parties to read the response from authenticated APIs, however. This reduces the risk somewhat. This misconfiguration could be used by an attacker to access data that is available in an unauthenticated manner, but which uses some other form of security, such as IP address white-listing.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://vulncat.fortify.com/en/detail?id=desc.config.dotnet.html5_overly_permissive_cors_policy&lt;/p&gt;</reference>
						<cweid>264</cweid>
						<wascid>14</wascid>
						<sourceid>1404</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10044</pluginid>
						<alertRef>10044-1</alertRef>
						<alert>Big Redirect Detected (Potential Sensitive Information Leak)</alert>
						<name>Big Redirect Detected (Potential Sensitive Information Leak)</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The server has responded with a redirect that seems to provide a large response. This may indicate that although the server sent a redirect it also responded with body content (which may include sensitive details, PII, etc.).&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>Location header URI length: 35 [https://nursing.hhnsystem.com/login].
Predicted response size: 335.
Response Body Length: 386.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>Location header URI length: 35 [https://nursing.hhnsystem.com/login].
Predicted response size: 335.
Response Body Length: 386.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>Location header URI length: 45 [https://nursing.hhnsystem.com/forgot-password].
Predicted response size: 345.
Response Body Length: 426.</otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Ensure that no sensitive information is leaked via redirect responses. Redirect responses should have almost no content.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Location header URI length: 35 [https://nursing.hhnsystem.com/login].&lt;/p&gt;&lt;p&gt;Predicted response size: 335.&lt;/p&gt;&lt;p&gt;Response Body Length: 386.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>201</cweid>
						<wascid>13</wascid>
						<sourceid>1404</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10010</pluginid>
						<alertRef>10010</alertRef>
						<alert>Cookie No HttpOnly Flag</alert>
						<name>Cookie No HttpOnly Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>Set-Cookie: XSRF-TOKEN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>Set-Cookie: XSRF-TOKEN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>Set-Cookie: XSRF-TOKEN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>Set-Cookie: XSRF-TOKEN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>Set-Cookie: XSRF-TOKEN</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>5</count>
						<solution>&lt;p&gt;Ensure that the HttpOnly flag is set for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-community/HttpOnly&lt;/p&gt;</reference>
						<cweid>1004</cweid>
						<wascid>13</wascid>
						<sourceid>1404</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10017</pluginid>
						<alertRef>10017</alertRef>
						<alert>Cross-Domain JavaScript Source File Inclusion</alert>
						<name>Cross-Domain JavaScript Source File Inclusion</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The page includes one or more script files from a third-party domain.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com/index.html</uri>
									<method>GET</method>
									<param>https://cpwebassets.codepen.io/assets/common/stopExecutionOnTimeout-1b93190375e9ccc259df3a57c1abc0e64599724ae30d7ea4c6877eb615f89387.js</param>
									<attack></attack>
									<evidence>&lt;script
        src=&quot;https://cpwebassets.codepen.io/assets/common/stopExecutionOnTimeout-1b93190375e9ccc259df3a57c1abc0e64599724ae30d7ea4c6877eb615f89387.js&quot;&gt;
    &lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/sitemap.xml</uri>
									<method>GET</method>
									<param>https://cpwebassets.codepen.io/assets/common/stopExecutionOnTimeout-1b93190375e9ccc259df3a57c1abc0e64599724ae30d7ea4c6877eb615f89387.js</param>
									<attack></attack>
									<evidence>&lt;script
        src=&quot;https://cpwebassets.codepen.io/assets/common/stopExecutionOnTimeout-1b93190375e9ccc259df3a57c1abc0e64599724ae30d7ea4c6877eb615f89387.js&quot;&gt;
    &lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure JavaScript source files are loaded from only trusted sources, and the sources can&apos;t be controlled by end users of the application.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>829</cweid>
						<wascid>15</wascid>
						<sourceid>1418</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10111</pluginid>
						<alertRef>10111</alertRef>
						<alert>Authentication Request Identified</alert>
						<name>Authentication Request Identified</name>
						<riskcode>0</riskcode>
						<confidence>3</confidence>
						<riskdesc>Informational (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The given request has been identified as an authentication request. The &apos;Other Info&apos; field contains a set of key=value lines which identify any relevant fields. If the request is in a context which has an Authentication Method set to &quot;Auto-Detect&quot; then this rule will change the authentication to match the request identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>email</param>
									<attack></attack>
									<evidence>password</evidence>
									<otherinfo>userParam=email
userValue=zaproxy@example.com
passwordParam=password
referer=https://nursing.hhnsystem.com/login
csrfToken=_token</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;userParam=email&lt;/p&gt;&lt;p&gt;userValue=zaproxy@example.com&lt;/p&gt;&lt;p&gt;passwordParam=password&lt;/p&gt;&lt;p&gt;referer=https://nursing.hhnsystem.com/login&lt;/p&gt;&lt;p&gt;csrfToken=_token&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/auth-req-id/&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1433</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com/assets/js/bootstrap.min.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>select</evidence>
									<otherinfo>The following pattern was used: \bSELECT\b and was detected in likely comment: &quot;//popper.js.org)&quot;);let t=this._element;&quot;parent&quot;===this._config.reference?t=this._parent:l(this._config.reference)?t=c(this._conf&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/assets/js/main.js</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>admin</evidence>
									<otherinfo>The following pattern was used: \bADMIN\b and was detected in likely comment: &quot;//bootstrapmade.com/nice-admin-bootstrap-admin-html-template/&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bSELECT\b and was detected in likely comment: &quot;//popper.js.org)&quot;);let t=this._element;&quot;parent&quot;===this._config.reference?t=this._parent:l(this._config.reference)?t=c(this._conf&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>615</cweid>
						<wascid>13</wascid>
						<sourceid>1429</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10109</pluginid>
						<alertRef>10109</alertRef>
						<alert>Modern Web Application</alert>
						<name>Modern Web Application</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&quot;#&quot; class=&quot;back-to-top d-flex align-items-center justify-content-center&quot;&gt;&lt;i class=&quot;bi bi-arrow-up-short&quot;&gt;&lt;/i&gt;&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&quot;#&quot; class=&quot;back-to-top d-flex align-items-center justify-content-center&quot;&gt;&lt;i class=&quot;bi bi-arrow-up-short&quot;&gt;&lt;/i&gt;&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;This is an informational alert and so no changes are required.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1427</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>no-cache, private</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>no-cache, private</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/robots.txt</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>1427</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10112</pluginid>
						<alertRef>10112</alertRef>
						<alert>Session Management Response Identified</alert>
						<name>Session Management Response Identified</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The given response has been identified as containing a session management token. The &apos;Other Info&apos; field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to &quot;Auto-Detect&quot; then this rule will change the session management to use the tokens identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://nursing.hhnsystem.com</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>eyJpdiI6Ink3bUFBYjQvZXNGVHc5RG9pandrNnc9PSIsInZhbHVlIjoiU0lCdWpESDFFUkhmRFJjK1ZrM2pkRnZSWTA0ekpSWUg1MTV6NlRjRkVVREp3eC9MemhpVWNuaVFKSDlZT0FkakFMdDdGK1RyRkh2Y0ZlcnNrZHdmdVZsbWI2MW1SZWpWTVVaU3NqK04rbUszQ0Q5S2hJMnNxRkMvL0Y1Y213WVpOQnpSdUROTnI4UTdRWUJPZ01xdDhxM3NpcENmcnZHVnlZV2h3RFZOejNyRCtCVUNkaWdwZ1lsMk41SHdWWGhueUxISHgzQUU3OXNnekxUV0Y5NTRLRGZERXlOdkVWQ2NkbTQ1ZUpDQzdab1FHZUY5Y3lRRjdpRWsxNXpuVjlTLzd6eXZidytQZllDOUFKYXE3S1pUKzFHQ3l6MEdpS3FSNC9ndU4rbW13S2RURThNMlFOR2YvYUp1NFFUdjlyRFBpMVJkZnBUeFVDVm9qa3VNbDN0VWxmM0dEcUpNYzR1SDdDTnJ2VXV3RnVKeDB5RzBsZ29wZXNBUmlQNVp6R2Y5elBFZEp2b0dzbzJEL0o5bGVoQXAvdXphYkFwNlBMcVpOeFJ4OS9zbzVuK1ZtcVpjMlFhT2FkUkNwM2E3dkZzQlNXTWczVHBPcFFXREdzaFdMN05ieWRWRmtPQTNLWDhtQlpHQ25JeksyL251RFFBZjdWSEpLN3Nzd3RWZzF0S2wiLCJtYWMiOiIwZDRkYjg5NmFlZjU5OWM0NzI0ZjBjYzZiZDMxNzcyNzY5ZWVhOGU2ZjBjOTAyMmVlOThkYmRhNDA2MGRmMzdiIiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:XSRF-TOKEN
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>eyJpdiI6IjVVdy9ua01RRU1vdkJXcGkvUWhiaUE9PSIsInZhbHVlIjoiUElxZW00Sk82K2xlR2hma3ZKa3VtdkZNb1MrN0FJY1JtVzhqZ1Zlem53MFFUVW1xeUNKeUt5UG1KVDFjQndJQjNkL3NXTldKSWFFNE5abzdYZlBZODBUR01TVzd1WFJONHVjTlBBaHU5YUJPeGhJRXVYVHZldVRNTlcvSWtEZkV5YkhuR0JXMUFvZHhuOVFuNk9RdVgzY0F1WFQ0Y29tcjVPcW1COXI3WWo3MjdMRTRjQURlaG9CNmo1S005MkN4NGZPMll3ak1KY3pXY2dlN2I3N3lyR1B1SjlOeGV1T3VRalUzTkswdTNUWXpLSXBNUVJ5VGdyRWdxdVd0dU5MVEluZlZpd3dSQ254K3BQT001eEVTcEhuQXM1THRHQThvRCs3bkFJT1p4M3lSREFFd0w0TTlvS2FSYWhsQTZFd2M5cFRrK05TR3dZbFN5cGVLTUxVeDBubmVSTkNvblh5OTFEd1lnTndtdzY3Q1pHMldBWWo5UWJhb29GUlhzd0hGU2lEU2M3YUdwZDZpczJJZ0JPLzYwVGwxK1A4OCt1MWk1RFEvUjRUZVkwK1piVGI5b3lEYWYxS0RwQ2d2bnVwb2V6c2IwL0tGTWIvZUt0WHhGRVRsTW4wSFlUU1l2VmtCeHQwSW8xU3g0TlBHb3RTODE3cWVwOUV0UFRac1BOUmwiLCJtYWMiOiIwYWY4NTFkNTMyYTRkNzI2YTIzNTExODIzODFkODA1ZmNiMGQ3MTNlNWE2MmNhMjE4NzI4ZGE0YmQ3YTI0YTY3IiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:XSRF-TOKEN
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>eyJpdiI6IndrOWx6S21tL2xJTVhIdit5cEk5U3c9PSIsInZhbHVlIjoiQzBSWnlBOFdRdTR3cU85S25vUWJndE9TUnkvRDg1R1dJR3hUaGlxQjJtK1FtS2RiV09CRkpicnNZYUx5VE5wQ09BTWVhSm1mcGRWdDNFVWV5MHJaTUtXSHJNV1NJUlpXdmkvU0p0YUpINE9YKytEV0FhMlAxVm5Yb3BRVHNESEl2dzNMTUMzckk2ejJlT0RkK3hPSDRCQ3JDazRaKzRRS2x1QjFCVWI0bVYxSTZnV2cvUTNPVVZia3JoOFppM2FiWGlwZ1NqOXJNa3RCczZaL2FOT1hjSWlJUGtEUWVhdlpGcXRNMWhGTkFrcHI4SGx1TFpIM1NPNGpoQisvbFlRMnkxcVAyclp1VVZnMGNjb09mdXRJck1YZkt0MDl1eU85UzNrMmphVUV4RU96bStnNWxwV2dRTjNLQlhZWVppTWVJTFhzL2NXcVFKMldyQU5wT1V4MURob29MV2FJVXRiUzhUelc1aG9WK0hHcmpBRlo4bVh1cmIzN2ZXZUhaYU5vYTZiL2xhR29OVUtMdlFSUi8xcndYVVZaY2l6NnhtOHFNUVA4elQzaW05VU1KdXF6eml6M1NRVUp1VmRqajhyZ1NYeXgvczRraUxLQWl2eHJ2WlpLaUJCMUtiRUg5NFZjK0FleU5BUzhodm1aU201Ym1zeDRHZUplTzIwOENqRzciLCJtYWMiOiJiYmUyZDNmN2RjOWM4MGVhOTM4OTljZWJiNmJkNTUxOTdkNWZjZTdlZDg4OGNkMzFmZjlkN2I4OWY1MzFhYzhlIiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:XSRF-TOKEN
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>eyJpdiI6Ik04Rnh5M0VZWkZkV28vcUcxWTd6enc9PSIsInZhbHVlIjoicWdEdm9TbWdUL0FIVzFRYjdYdDRDMGFSOTYreWppQWkyTnVubmZXR0sxSmdvelQ5RVZ5dFZ6Nk14SmZGajdML1AwYmFTb3BNbjRrcWNadEFsTy82ekJ1L044NERTcGRZODFuekFSRU03L2tJTjVKUDZvK0pyRUVYOW1PWnBPdWVlenRrblZ3eXhMalN0OUs4VHVySU1zZEt3cXh2d0F0WUZNaFBDTjNEYk9adE43QWJuaTZ4eDNINkFsSHZlS2FYRjhLWGNYNEhqbXR6cVZ3MU5BQU4rdUNNRTh1aDdSeUlxUzlpaTB6SXlTUU5VbFZjQTNpdnkyVkx0QWxuRkdxcjE5cEJsR2R1K2dta081U2doYVVMNDVrd29HV29iQjJ2V1Jma3JMV2N0OVVvNnlDcW94UTNjekl6a0ttQUVlZVNrdzNjUE9XL1U0Vko1NkVtbUpWeEU1QkRucFgzbEp0aVJ0TnhVVFV0OE04NTJldmNlTXE3ZTUvUE16azZ2Ti9IRTRKRmRLRytveUYxb3c5WWF4TDZyT0hWTXFWYXF6NjJhVDdycjBFOVRhMU01cm8wYVRiRTU1ZmZCRnhZUFV0eVVlaW9UbDU1bTRsWjNqdFRLZ05xUklsRFVWWkpoUUJzZ0hoeWxPZnhvRHVtYThqZno5V3hsckZ6N0dESWhFOVQiLCJtYWMiOiJlZmE2ZDA5ZGQ1ZjE0MGZlMmFiZTQ0N2Q5Nzk1N2Q4M2I4ZjA2NDZiYjU0NTAxMDc5ZTdkYjM1ZjgxZmQwMzQzIiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:XSRF-TOKEN
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>eyJpdiI6IjA3L21UN3FXVW1GSHpucGtoaDlZRnc9PSIsInZhbHVlIjoiaEpsYmdtNE53RS9DUmxteEVSL05tTGRhQTZxakRIa0p0T0NObnB5M3E4Vlk5bzUrSnVUYXhueDdzRytaK3hjdy96Nmova093N0ZSMWFZV29Lb2JWUHFSRlp3SDNaajN2SHdid1NiYVRWNExSanZrMDVHUTBzb2NsVW1yUlBqdGhtdWhERjM3bDFYNnhiMS9Zc1ZNS00xazg5aUhSUzNzYzNPMkV1bkdtVm1IYk56VE1NdXVyZzlDV3FDeUI1eXJhK1hPQWh1VHE5cHMxNWtqdC9IV0RHbXN3clpya1o5UUFhaG9hS2NrM3ZDTGk1aVJZMDBMd3ptalZvdEh1MUdDVkhkZVVJNzc0eGNsS01FRnp2djduOU9DdGZWQ2Q2Q0dXblpBOElpazdxb3RqTXU5endQQm1LcVZLd3luNkkzZzVJSE5LQkVuZG0wYTFORStMSHBWTnFGWlZMbU9selBGR1d1RlREU1B6MDhXbysvKzNJRVVWWXZLc0Ryb05xZHVkUG9MeDJjZGlqME1CWVVabjdKS0cwT2tCQjRQMm9OU1U2eVNHcUQ4VnhDUmRtRUNXNDhwTU5tRjVvYVZQd2ZESWF3cExLNzBrZmtodW5KdUFWNUd3M0JDYlFjQ1F2MC9WdUhCT3YwWDF4Sml5OGQ0Nmt3Sy9RTHUxc3RHYVIrWm8iLCJtYWMiOiJkOTdjNTMzZDdhMDIxZDdlMjdlOTg2MTc1MjQ1OTdkMTVkYjNjN2IxNDQ3MWZmNDNjM2E4ZjQ5MTFiYTMzZTgwIiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:XSRF-TOKEN
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>eyJpdiI6IlhZSXkwREF0dnAzekVaaW9BRDZsY2c9PSIsInZhbHVlIjoiNGdxRDdqWEJBMytNdGlpWTZjWTA4clFkWmtBYlNKS0lIbW4xZlFFTDl3em84ZFIwS3I3TjVvWEhXTmkrMFRnS1gwbVVLVmFpazRyNmowV3ZYLzNHMjdMSmNvTlVScmVudkRCYmFPb0JoZ1h1clh2OFRmcWtvZjRHd1luWHRkdVJpSE5aZW9rZXBTSjZGRFpJT0F5dkp1T3dsbTZud0h5SndFMWROTUFISnM2NDJNVzI0ZFk0eXdIbUZybW51UE5JTUlrblBDYmo2alNkMWhVcEh0Ni9kbVpCVldIVTZqd3pkdW0wZnUzQW9NR1ZQV1BUQUE1WEdtOGsvY1EvM0JuZ3JTSEhCZzIrbnhYTVdxVkxuWmkwdm9Da09GcFhtdXp0OVNvUVlXTGhNQ0xYOWIvTFc5MzVNMkwxT2ZvNFFNaGNLSUI1aE52Rms4dWsxWS8xd1VNNGw4bStyb0czMDI1QitpZlBsTG9WZzRCN3lzM2pQNTZMdVRucUVGMDY5dVdGSDM2RWpGK0hOV1oxMjNDQWt3cGoyWU5SR0VKR3k3UUljS0VIckxSOUhmRW1FOWpuMDBjZm5hWlEveDl5SUZQSGJRZzdET25wblExUEMrd1JEV2pzVmtOVExLcVJWdUtpUWtjb3ByWXNyWjB5bTdOeGtNcHovWmtyTDdzNDRVWTYiLCJtYWMiOiI3YjJmNzE1Zjc5ZGZmZWU5NDY3ZTc5ZmM1NmM2OGIyNDk3ZmFkOGY2NGQwYmNhNDQ0NTI0NWMxZmIxNjE3NzY2IiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:XSRF-TOKEN
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/forgot-password</uri>
									<method>POST</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>eyJpdiI6ImViUVRGMlUzc1p6MXBnc01uSk5ZN1E9PSIsInZhbHVlIjoiUnJNMmcrdzJiK0wrQzZoUFh3dFVxK05BVE0raCsvWGMva3hrS2R2SG8zV2hHMnNYdUxuT2pHemdPdSs2NUxTMlc5ZFljNG53OGkrc2J4L0JUQXpyRFBmVTBwQ3YxUjRVS3B5UEozUG41aFhwdmNCTUFCKytVNDl4OFZwZGFBaXBkU0k3cnZxOUw4MDR6K2hMV1U3WFlrT2RjZ1JmdHVxaWY2QnRmWTlRVUhZUkxWSUxHNW5oT1o0ZXljUkMwMkRGVEk0aFFZRWpDc0dZbzlOdGx4dUkwcDFYRVBKb2YrQmtnQW8xa0RuV29TNVFIVlY5TEtWZCs4dFhkTnBCdWlhSHRtbFNPZWxuRGVXaHgxR3oyYkZFSkRjYnN6N3Y3aE1jRFFnSHV5Vk9EUWE1aXBkTVpsNzE5SFdpYk8xZDNoZTJOVTRlVFRjbnMrSFJTeW02OEJrVGphTWRKd1lEK2JrWDdBWEVUZ3k4RVVYb0NrNDZ4VnhwRlhSMkFFVkxyZXhnMlNQRkpYZXA4V3ZTNTRPejFwU3ZhRFEwU1JDWmhqeWJ4SFU1cmpIL1BwdUJvRkVIVnlXQm4yc3dyK3lmbmhFT0JXQlN0Um9CbHdZa3RGVkR6Wm5UaEUrMW52ZWdpRmlTSHA4czUvdVZLNE9Ld0poOWlRQVpYQjJ2dWxGcG9xSHQiLCJtYWMiOiJjNmJjZjM4NjhiYzFhZjdiMDhhNDI3ODVmYzI2NDE0YTc2OGE2MzQ5ZDcwYzJiMGFhYzcwNGViM2VkY2MwMTFmIiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:XSRF-TOKEN
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/login</uri>
									<method>POST</method>
									<param>honor_care_session</param>
									<attack></attack>
									<evidence>eyJpdiI6IituaXNGRy83UTg2bmxhU1BvbnU5UlE9PSIsInZhbHVlIjoiSDVuMkQ5Q0FFWEkzU1Jjclc3WER6d2FCdHVWVndwWFJUSm1jTWxjYi91UkJZVDNOZFhSdjE5b01YalhsKytTM0NPdDR5VEZFMTBMMVJlS3Z0MFRlcHZuLzNoZzBOVFY5dU9ybS9sOW1pUldHdFJqcG4vZVhyWHJyYjIwbXlCV01GaUxSbXR3Ry82R2oxazJod3puRnUrRENOdW9rL2dZanlMYUxyeEF6dEo0MWFwb3IrQklxZ1Mvdm5ZNGxaNGd0MmdaUUx2OUFNVXJBVDdKTm5GQXl0NkNhbE4xaEVIdjcydUVVaTUwRHlGVVU1b0xDM2ZTRlJjNlAyVjBwbFdpVVJQL1RkWHpYS0NkSkhhOG5WQWw3NkcwZ1IzNFQ3S1RNbHBUWHpCQWVnS09ENXlKZFBHNi9DaWgrU1dUc1ltVlZxTEVmSHhtUGprTElWUXlaYWc1STlGM01mbUFrZXozT1ZSc0s2VnJObG8vQ2ozU05IMS9BSEl5cFZ0VnBMWHBOVGgzVDlPelZuL2NEMHd0dVNuV1Q0WUpleFNsU0h5VzJqeSs3bFJ5QW1ST0Y2MCtPajFGdXorYW41Y1VIOHMxMEVIM0hXa3I4NGxqdk5IOWJ4Mm9ZZkJ2dFFVcmtNMWVkMExGd3h0RC9Hc0VYcjcwZ3dyVmxtN1A1NVNVanBHRVYiLCJtYWMiOiI1ODRjM2FhMzUzNzIwMDA5YTgwYTMxOGU1MDhiMTc2MjJjZmNmYzY1N2QwNGRjM2ZiOTliMzVkODk5OGY4ZGU0IiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>honor_care_session</param>
									<attack></attack>
									<evidence>eyJpdiI6InVhMXROT2FFMEI1YWQ0aDVkNFFtRlE9PSIsInZhbHVlIjoiM2daeUlPZTlwbVNRQmZyTFBGYytrSHJWaFhIRGZUQ1I1R0tSaGlQWUN3Y1lESlhVaVZHN08yQVlhdDZNT0JYTUlLRHNHNFpWRnNEb3V5b0JhTHNjS1ZrT2dINVFoUWk2aHhhZ2EwdTRkdnZwckV4K3c4SkVvNUlLamEyUEJ0M2k3cnpVbGRTbmphMmdrUTlmSmZjNllVNC9aRTFQS2lNdmEyRDU2RnJ1RkMweXdvRUR3TE5OSVViSGZwL1hYUXlXZCt3WXRid3ZIQlA0dEpHTDVjTDR0S2FXZVJhZHc2Mlp1bjBqTVlPVG02L3JWZVB5ZEdWeGVyU2drMmVEOTVRYzVBMFdJR24wcDUzTHhRd3p5M2VQMFY5Vnl6NytEeUE4c291czN3czhCSzIyWHpqMzJLTTFEVitZRTBMblJIenBERGdoWURoUVo0b2VEZ0NuS1Q4LzJ5QzRFdkRaOGJQWWRMMTI0SEF4Rnk1WjIwU2ZIM1lpVURxRnd0M240aUNUMk1tOFhPU2VrTzAxNVl3WmhTY284V3VtT0NhYkJuWlpKeGdvYXNzL2hWNk5Ma1dSemdZKzF3V1VjTGcyQngxa3drdFlRbnBwWVZ5cHExbmtCMnVPOTMxK2puN0NPK0tIcFN0SjEzR0F5K2l3dUdBZVI1aHJYY2ZBVkE4RkVCZ2oiLCJtYWMiOiIzNzhhZDEyMzBjNGY4NWRiZjczYjg4YTdkNjc5ODM3MDJlOWYwZTA3MDFiODAzOGEwNjQ0MWVmNDViMWY3YzQ3IiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:honor_care_session</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://nursing.hhnsystem.com/</uri>
									<method>GET</method>
									<param>XSRF-TOKEN</param>
									<attack></attack>
									<evidence>eyJpdiI6IndrOWx6S21tL2xJTVhIdit5cEk5U3c9PSIsInZhbHVlIjoiQzBSWnlBOFdRdTR3cU85S25vUWJndE9TUnkvRDg1R1dJR3hUaGlxQjJtK1FtS2RiV09CRkpicnNZYUx5VE5wQ09BTWVhSm1mcGRWdDNFVWV5MHJaTUtXSHJNV1NJUlpXdmkvU0p0YUpINE9YKytEV0FhMlAxVm5Yb3BRVHNESEl2dzNMTUMzckk2ejJlT0RkK3hPSDRCQ3JDazRaKzRRS2x1QjFCVWI0bVYxSTZnV2cvUTNPVVZia3JoOFppM2FiWGlwZ1NqOXJNa3RCczZaL2FOT1hjSWlJUGtEUWVhdlpGcXRNMWhGTkFrcHI4SGx1TFpIM1NPNGpoQisvbFlRMnkxcVAyclp1VVZnMGNjb09mdXRJck1YZkt0MDl1eU85UzNrMmphVUV4RU96bStnNWxwV2dRTjNLQlhZWVppTWVJTFhzL2NXcVFKMldyQU5wT1V4MURob29MV2FJVXRiUzhUelc1aG9WK0hHcmpBRlo4bVh1cmIzN2ZXZUhaYU5vYTZiL2xhR29OVUtMdlFSUi8xcndYVVZaY2l6NnhtOHFNUVA4elQzaW05VU1KdXF6eml6M1NRVUp1VmRqajhyZ1NYeXgvczRraUxLQWl2eHJ2WlpLaUJCMUtiRUg5NFZjK0FleU5BUzhodm1aU201Ym1zeDRHZUplTzIwOENqRzciLCJtYWMiOiJiYmUyZDNmN2RjOWM4MGVhOTM4OTljZWJiNmJkNTUxOTdkNWZjZTdlZDg4OGNkMzFmZjlkN2I4OWY1MzFhYzhlIiwidGFnIjoiIn0%3D</evidence>
									<otherinfo>
cookie:XSRF-TOKEN</otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;&lt;/p&gt;&lt;p&gt;cookie:XSRF-TOKEN&lt;/p&gt;&lt;p&gt;cookie:honor_care_session&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1404</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://www.itptek.com" host="www.itptek.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-13</alertRef>
						<alert>CSP: Failure to Define Directive with No Fallback</alert>
						<name>CSP: Failure to Define Directive with No Fallback</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The Content Security Policy fails to define one of the directives that has no fallback. Missing/excluding them is the same as allowing anything.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The directive(s): form-action is/are among the directives that do not fallback to default-src.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1265</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-4</alertRef>
						<alert>CSP: Wildcard Directive</alert>
						<name>CSP: Wildcard Directive</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:&lt;/p&gt;&lt;p&gt;script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1265</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-5</alertRef>
						<alert>CSP: script-src unsafe-inline</alert>
						<name>CSP: script-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;script-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1265</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-6</alertRef>
						<alert>CSP: style-src unsafe-inline</alert>
						<name>CSP: style-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;style-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1265</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10017</pluginid>
						<alertRef>10017</alertRef>
						<alert>Cross-Domain JavaScript Source File Inclusion</alert>
						<name>Cross-Domain JavaScript Source File Inclusion</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The page includes one or more script files from a third-party domain.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param>https://www.google.com/recaptcha/api.js?onload=cf7srLoadRecaptcha&amp;render=explicit&amp;hl=en-GB</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://www.google.com/recaptcha/api.js?onload=cf7srLoadRecaptcha&amp;#038;render=explicit&amp;#038;hl=en-GB&quot; async defer&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param>https://www.googletagmanager.com/gtag/js?id=UA-123087652-1</param>
									<attack></attack>
									<evidence>&lt;script async src=&quot;https://www.googletagmanager.com/gtag/js?id=UA-123087652-1&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure JavaScript source files are loaded from only trusted sources, and the sources can&apos;t be controlled by end users of the application.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>829</cweid>
						<wascid>15</wascid>
						<sourceid>1265</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected in likely comment: &quot;//schema.org&quot;,&quot;@graph&quot;:[{&quot;@type&quot;:&quot;WebPage&quot;,&quot;@id&quot;:&quot;https://www.itptek.com/&quot;,&quot;url&quot;:&quot;https://www.itptek.com/&quot;,&quot;name&quot;:&quot;IT Support &amp; &quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>from</evidence>
									<otherinfo>The following pattern was used: \bFROM\b and was detected in likely comment: &quot;&lt;!--
Performance optimized by W3 Total Cache. Learn more: https://www.boldgrid.com/w3-total-cache/

Minified using Disk

Se&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bQUERY\b and was detected in likely comment: &quot;//schema.org&quot;,&quot;@graph&quot;:[{&quot;@type&quot;:&quot;WebPage&quot;,&quot;@id&quot;:&quot;https://www.itptek.com/&quot;,&quot;url&quot;:&quot;https://www.itptek.com/&quot;,&quot;name&quot;:&quot;IT Support &amp; &quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>615</cweid>
						<wascid>13</wascid>
						<sourceid>1265</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10109</pluginid>
						<alertRef>10109</alertRef>
						<alert>Modern Web Application</alert>
						<name>Modern Web Application</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&quot;#&quot; class=&quot;dropdown-toggle&quot; data-bs-toggle=&quot;dropdown&quot;&gt;Products&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;This is an informational alert and so no changes are required.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1265</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.itptek.com/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>public</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>1265</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://itptek.com" host="itptek.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-13</alertRef>
						<alert>CSP: Failure to Define Directive with No Fallback</alert>
						<name>CSP: Failure to Define Directive with No Fallback</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The Content Security Policy fails to define one of the directives that has no fallback. Missing/excluding them is the same as allowing anything.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://itptek.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/our-company/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/testimonials/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/author/admin/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/software-as-a-service-what-can-it-do-for-you/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/the-importance-of-branding/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/this-is-a-blog-post/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/blog/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/branding/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/business-intelligence/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/contact-us-2/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/portfolio/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products-2/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=10</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=11</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=12</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=13</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=14</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=15</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=2</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=3</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=4</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=5</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=6</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=7</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=8</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=9</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/business-intelligence-reporting/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/graphic-design/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/internet-marketing/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/it-support-helpdesk/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/managed-it-services/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/networking-cloud-services-virtualization/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/printers-toners-check-stock/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/professional-it-consulting/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/database-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/mobile-app-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/software-outsourcing/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/web-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/voip/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The directive(s): form-action is/are among the directives that do not fallback to default-src.</otherinfo>
								</instance>
							
						</instances>
						<count>46</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The directive(s): form-action is/are among the directives that do not fallback to default-src.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1273</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-4</alertRef>
						<alert>CSP: Wildcard Directive</alert>
						<name>CSP: Wildcard Directive</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://itptek.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/our-company/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/testimonials/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/author/admin/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/software-as-a-service-what-can-it-do-for-you/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/the-importance-of-branding/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/this-is-a-blog-post/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/blog/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/branding/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/business-intelligence/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/contact-us-2/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/portfolio/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products-2/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=10</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=11</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=12</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=13</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=14</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=15</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=2</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=3</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=4</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=5</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=6</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=7</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=8</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=9</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/business-intelligence-reporting/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/graphic-design/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/internet-marketing/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/it-support-helpdesk/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/managed-it-services/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/networking-cloud-services-virtualization/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/printers-toners-check-stock/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/professional-it-consulting/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/database-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/mobile-app-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/software-outsourcing/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/web-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/voip/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:
script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src</otherinfo>
								</instance>
							
						</instances>
						<count>46</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following directives either allow wildcard sources (or ancestors), are not defined, or are overly broadly defined:&lt;/p&gt;&lt;p&gt;script-src, style-src, img-src, connect-src, frame-src, font-src, media-src, object-src, manifest-src, worker-src&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1273</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-5</alertRef>
						<alert>CSP: script-src unsafe-inline</alert>
						<name>CSP: script-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://itptek.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/our-company/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/testimonials/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/author/admin/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/software-as-a-service-what-can-it-do-for-you/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/the-importance-of-branding/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/this-is-a-blog-post/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/blog/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/branding/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/business-intelligence/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/contact-us-2/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/portfolio/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products-2/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=10</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=11</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=12</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=13</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=14</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=15</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=2</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=3</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=4</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=5</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=6</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=7</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=8</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=9</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/business-intelligence-reporting/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/graphic-design/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/internet-marketing/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/it-support-helpdesk/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/managed-it-services/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/networking-cloud-services-virtualization/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/printers-toners-check-stock/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/professional-it-consulting/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/database-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/mobile-app-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/software-outsourcing/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/web-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/voip/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>script-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>46</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;script-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1273</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10055</pluginid>
						<alertRef>10055-6</alertRef>
						<alert>CSP: style-src unsafe-inline</alert>
						<name>CSP: style-src unsafe-inline</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks. Including (but not limited to) Cross Site Scripting (XSS), and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://itptek.com</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/our-company/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/about/testimonials/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/author/admin/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/software-as-a-service-what-can-it-do-for-you/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/the-importance-of-branding/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/blog/this-is-a-blog-post/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/blog/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/branding/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/category/business-intelligence/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/contact-us-2/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/portfolio/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products-2/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=10</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=11</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=12</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=13</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=14</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=15</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=2</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=3</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=4</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=5</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=6</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=7</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=8</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/products/?SingleProduct=9</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/business-intelligence-reporting/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/graphic-design/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/internet-marketing/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/it-support-helpdesk/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/managed-it-services/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/networking-cloud-services-virtualization/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/printers-toners-check-stock/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/professional-it-consulting/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/database-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/mobile-app-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/software-outsourcing/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/software-development/web-development/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/services/voip/</uri>
									<method>GET</method>
									<param>Content-Security-Policy</param>
									<attack></attack>
									<evidence>frame-ancestors &apos;self&apos; https://www.itptek.com/;</evidence>
									<otherinfo>style-src includes unsafe-inline.</otherinfo>
								</instance>
							
						</instances>
						<count>46</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is properly configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;style-src includes unsafe-inline.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#search=content+security+policy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;&lt;p&gt;https://github.com/HtmlUnit/htmlunit-csp&lt;/p&gt;&lt;p&gt;https://developers.google.com/web/fundamentals/security/csp#policy_applies_to_a_wide_variety_of_resources&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1273</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://itptek.com/robots.txt</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>public</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://itptek.com/sitemap.xml</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>public</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>1271</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://www.india.com" host="www.india.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10202</pluginid>
						<alertRef>10202</alertRef>
						<alert>Absence of Anti-CSRF Tokens</alert>
						<name>Absence of Anti-CSRF Tokens</name>
						<riskcode>2</riskcode>
						<confidence>1</confidence>
						<riskdesc>Medium (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;No Anti-CSRF tokens were found in a HTML submission form.&lt;/p&gt;&lt;p&gt;A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF attacks are effective in a number of situations, including:&lt;/p&gt;&lt;p&gt;    * The victim has an active session on the target site.&lt;/p&gt;&lt;p&gt;    * The victim is authenticated via HTTP auth on the target site.&lt;/p&gt;&lt;p&gt;    * The victim is on the same local network as the target site.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF has primarily been used to perform an action against a target site using the victim&apos;s privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form  class=&quot;subscribe-form&quot; name=&apos;sub-form&apos; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;email&quot; &quot;name&quot; &quot;site&quot; &quot;submitnow&quot; ].</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.&lt;/p&gt;&lt;p&gt;For example, use anti-CSRF packages such as the OWASP CSRFGuard.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Use the ESAPI Session Management control.&lt;/p&gt;&lt;p&gt;This control includes a component for CSRF.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Do not use the GET method for any request that triggers a state change.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;email&quot; &quot;name&quot; &quot;site&quot; &quot;submitnow&quot; ].&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://cwe.mitre.org/data/definitions/352.html&lt;/p&gt;</reference>
						<cweid>352</cweid>
						<wascid>9</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10038</pluginid>
						<alertRef>10038-1</alertRef>
						<alert>Content Security Policy (CSP) Header Not Set</alert>
						<name>Content Security Policy (CSP) Header Not Set</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-csp/&lt;/p&gt;&lt;p&gt;https://web.dev/articles/csp&lt;/p&gt;&lt;p&gt;https://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10020</pluginid>
						<alertRef>10020-1</alertRef>
						<alert>Missing Anti-clickjacking Header</alert>
						<name>Missing Anti-clickjacking Header</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response does not protect against &apos;ClickJacking&apos; attacks. It should include either Content-Security-Policy with &apos;frame-ancestors&apos; directive or X-Frame-Options.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.&lt;/p&gt;&lt;p&gt;If you expect the page to be framed only by pages on your server (e.g. it&apos;s part of a FRAMESET) then you&apos;ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy&apos;s &quot;frame-ancestors&quot; directive.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&lt;/p&gt;</reference>
						<cweid>1021</cweid>
						<wascid>15</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10017</pluginid>
						<alertRef>10017</alertRef>
						<alert>Cross-Domain JavaScript Source File Inclusion</alert>
						<name>Cross-Domain JavaScript Source File Inclusion</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The page includes one or more script files from a third-party domain.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>//static.chartbeat.com/js/chartbeat_mab.js</param>
									<attack></attack>
									<evidence>&lt;script async src=&quot;//static.chartbeat.com/js/chartbeat_mab.js&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://accounts.google.com/gsi/client</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://accounts.google.com/gsi/client&quot; async defer&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://cdn.izooto.com/scripts/3f360aeab958302e4fc2f7cc38fe6b91372dae51.js</param>
									<attack></attack>
									<evidence>&lt;script src=&quot;https://cdn.izooto.com/scripts/3f360aeab958302e4fc2f7cc38fe6b91372dae51.js&quot; async=&quot;true&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://d3fukwxve5r8zf.cloudfront.net/prebid_config_2805124906.min.js</param>
									<attack></attack>
									<evidence>&lt;script async src=https://d3fukwxve5r8zf.cloudfront.net/prebid_config_2805124906.min.js&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://go.automatad.com/geo/Tq89wY/afihbs.js</param>
									<attack></attack>
									<evidence>&lt;script type=&quot;text/javascript&quot; src=&quot;https://go.automatad.com/geo/Tq89wY/afihbs.js&quot; async&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://static.india.com/wp-content/themes/icom/js/custom.js?20250416-1</param>
									<attack></attack>
									<evidence>&lt;script async src=&quot;https://static.india.com/wp-content/themes/icom/js/custom.js?20250416-1&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://static.india.com/wp-content/themes/icom/js/islide-scrollto_v1.js?ver=iwpl_20241003-1</param>
									<attack></attack>
									<evidence>&lt;script type=&apos;text/javascript&apos; src=&apos;https://static.india.com/wp-content/themes/icom/js/islide-scrollto_v1.js?ver=iwpl_20241003-1&apos; defer=&apos;defer&apos; id=&apos;icom-slider-jquery-js&apos;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://static.india.com/wp-content/themes/icom/js/jquery-2.0.3.min.js?ver=iwpl_20241003-1</param>
									<attack></attack>
									<evidence>&lt;script type=&apos;text/javascript&apos; src=&apos;https://static.india.com/wp-content/themes/icom/js/jquery-2.0.3.min.js?ver=iwpl_20241003-1&apos; id=&apos;jquery-js&apos;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://static.india.com/wp-content/themes/icom/js/jquery-3.6.0.min.js?20250416-1</param>
									<attack></attack>
									<evidence>&lt;script async src=&quot;https://static.india.com/wp-content/themes/icom/js/jquery-3.6.0.min.js?20250416-1&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://static.india.com/wp-content/themes/icom/js/jquery.bxslider.min.js?ver=iwpl_20241003-1</param>
									<attack></attack>
									<evidence>&lt;script type=&apos;text/javascript&apos; src=&apos;https://static.india.com/wp-content/themes/icom/js/jquery.bxslider.min.js?ver=iwpl_20241003-1&apos; defer=&apos;defer&apos; id=&apos;bxslider-js-js&apos;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://static.india.com/wp-content/themes/icom/js/lazyload.min.js?20250416-1</param>
									<attack></attack>
									<evidence>&lt;script  src=&quot;https://static.india.com/wp-content/themes/icom/js/lazyload.min.js?20250416-1&quot; defer=&quot;true&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://static.india.com/wp-content/themes/icom/js/splide.gallery.min.js?v=20250416-1</param>
									<attack></attack>
									<evidence>&lt;script  src=&quot;https://static.india.com/wp-content/themes/icom/js/splide.gallery.min.js?v=20250416-1&quot; defer=&quot;true&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://static.india.com/wp-content/themes/icom/js/tab.js?20250416-1</param>
									<attack></attack>
									<evidence>&lt;script async src=&quot;https://static.india.com/wp-content/themes/icom/js/tab.js?20250416-1&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://tags.crwdcntrl.net/lt/c/5620/lt.min.js</param>
									<attack></attack>
									<evidence>&lt;script async src=&quot;https://tags.crwdcntrl.net/lt/c/5620/lt.min.js&quot;&gt; &lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>https://www.googletagmanager.com/gtag/js?id=UA-19458284-1</param>
									<attack></attack>
									<evidence>&lt;script async src=&quot;https://www.googletagmanager.com/gtag/js?id=UA-19458284-1&quot;&gt;&lt;/script&gt;</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>15</count>
						<solution>&lt;p&gt;Ensure JavaScript source files are loaded from only trusted sources, and the sources can&apos;t be controlled by end users of the application.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>829</cweid>
						<wascid>15</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10023</pluginid>
						<alertRef>10023</alertRef>
						<alert>Information Disclosure - Debug Error Messages</alert>
						<name>Information Disclosure - Debug Error Messages</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response appeared to contain common error messages returned by platforms such as ASP.NET, and Web-servers such as IIS and Apache. You can configure the list of common debug messages.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>under construction</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Disable debugging messages before pushing to production.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference></reference>
						<cweid>1295</cweid>
						<wascid>13</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10036</pluginid>
						<alertRef>10036</alertRef>
						<alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
						<name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>IndiaWeb/10.1.10</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)&lt;/p&gt;&lt;p&gt;https://www.troyhunt.com/shhh-dont-let-your-response-headers/&lt;/p&gt;</reference>
						<cweid>497</cweid>
						<wascid>13</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10096</pluginid>
						<alertRef>10096</alertRef>
						<alert>Timestamp Disclosure - Unix</alert>
						<name>Timestamp Disclosure - Unix</name>
						<riskcode>1</riskcode>
						<confidence>1</confidence>
						<riskdesc>Low (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;A timestamp was disclosed by the application/web server. - Unix&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>1932107608</evidence>
									<otherinfo>1932107608, which evaluates to: 2031-03-24 14:03:28.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Manually confirm that the timestamp data is not sensitive, and that the data cannot be aggregated to disclose exploitable patterns.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;1932107608, which evaluates to: 2031-03-24 14:03:28.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cwe.mitre.org/data/definitions/200.html&lt;/p&gt;</reference>
						<cweid>497</cweid>
						<wascid>13</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10027</pluginid>
						<alertRef>10027</alertRef>
						<alert>Information Disclosure - Suspicious Comments</alert>
						<name>Information Disclosure - Suspicious Comments</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The response appears to contain suspicious comments which may help an attacker.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>query</evidence>
									<otherinfo>The following pattern was used: \bQUERY\b and was detected in likely comment: &quot;//schema.org&quot;,&quot;@type&quot;: &quot;WebSite&quot;,&quot;url&quot;: &quot;https://www.india.com/&quot;,&quot;potentialAction&quot;: {&quot;@type&quot;: &quot;SearchAction&quot;,&quot;target&quot;: &quot;https://&quot;, see evidence field for the suspicious comment/snippet.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Remove all comments that return information that may help an attacker and fix any underlying problems they refer to.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The following pattern was used: \bQUERY\b and was detected in likely comment: &quot;//schema.org&quot;,&quot;@type&quot;: &quot;WebSite&quot;,&quot;url&quot;: &quot;https://www.india.com/&quot;,&quot;potentialAction&quot;: {&quot;@type&quot;: &quot;SearchAction&quot;,&quot;target&quot;: &quot;https://&quot;, see evidence field for the suspicious comment/snippet.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>615</cweid>
						<wascid>13</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10109</pluginid>
						<alertRef>10109</alertRef>
						<alert>Modern Web Application</alert>
						<name>Modern Web Application</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;noscript&gt;&lt;iframe src=&quot;https://www.googletagmanager.com/ns.html?id=GTM-5D2XVLM&quot; height=&quot;0&quot; width=&quot;0&quot; style=&quot;display:none;visibility:hidden&quot;&gt;&lt;/iframe&gt;&lt;/noscript&gt;</evidence>
									<otherinfo>A noScript tag has been found, which is an indication that the application works differently with JavaScript enabled compared to when it is not.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;This is an informational alert and so no changes are required.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;A noScript tag has been found, which is an indication that the application works differently with JavaScript enabled compared to when it is not.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.india.com/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>must-revalidate, max-age=26</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>1253</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://india.com" host="india.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10010</pluginid>
						<alertRef>10010</alertRef>
						<alert>Cookie No HttpOnly Flag</alert>
						<name>Cookie No HttpOnly Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the HttpOnly flag, which means that the cookie can be accessed by JavaScript. If a malicious script can be run on this page then the cookie will be accessible and can be transmitted to another site. If this is a session cookie then session hijacking may be possible.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://india.com</uri>
									<method>GET</method>
									<param>traffic_medium</param>
									<attack></attack>
									<evidence>Set-Cookie: traffic_medium</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://india.com/</uri>
									<method>GET</method>
									<param>traffic_medium</param>
									<attack></attack>
									<evidence>Set-Cookie: traffic_medium</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that the HttpOnly flag is set for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-community/HttpOnly&lt;/p&gt;</reference>
						<cweid>1004</cweid>
						<wascid>13</wascid>
						<sourceid>1259</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10011</pluginid>
						<alertRef>10011</alertRef>
						<alert>Cookie Without Secure Flag</alert>
						<name>Cookie Without Secure Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://india.com</uri>
									<method>GET</method>
									<param>traffic_medium</param>
									<attack></attack>
									<evidence>Set-Cookie: traffic_medium</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://india.com/</uri>
									<method>GET</method>
									<param>traffic_medium</param>
									<attack></attack>
									<evidence>Set-Cookie: traffic_medium</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;</reference>
						<cweid>614</cweid>
						<wascid>13</wascid>
						<sourceid>1259</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10054</pluginid>
						<alertRef>10054-1</alertRef>
						<alert>Cookie without SameSite Attribute</alert>
						<name>Cookie without SameSite Attribute</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a &apos;cross-site&apos; request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://india.com</uri>
									<method>GET</method>
									<param>traffic_medium</param>
									<attack></attack>
									<evidence>Set-Cookie: traffic_medium</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://india.com/</uri>
									<method>GET</method>
									<param>traffic_medium</param>
									<attack></attack>
									<evidence>Set-Cookie: traffic_medium</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that the SameSite attribute is set to either &apos;lax&apos; or ideally &apos;strict&apos; for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site&lt;/p&gt;</reference>
						<cweid>1275</cweid>
						<wascid>13</wascid>
						<sourceid>1259</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035-1</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://india.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://india.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://india.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://india.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;https://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>1259</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://www.google.com" host="www.google.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10038</pluginid>
						<alertRef>10038-1</alertRef>
						<alert>Content Security Policy (CSP) Header Not Set</alert>
						<name>Content Security Policy (CSP) Header Not Set</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-csp/&lt;/p&gt;&lt;p&gt;https://web.dev/articles/csp&lt;/p&gt;&lt;p&gt;https://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1241</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10011</pluginid>
						<alertRef>10011</alertRef>
						<alert>Cookie Without Secure Flag</alert>
						<name>Cookie Without Secure Flag</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the secure flag, which means that the cookie can be accessed via unencrypted connections.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param>NID</param>
									<attack></attack>
									<evidence>Set-Cookie: NID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Whenever a cookie contains sensitive information or is a session token, then it should always be passed using an encrypted channel. Ensure that the secure flag is set for cookies containing such sensitive information.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;</reference>
						<cweid>614</cweid>
						<wascid>13</wascid>
						<sourceid>1241</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10054</pluginid>
						<alertRef>10054-1</alertRef>
						<alert>Cookie without SameSite Attribute</alert>
						<name>Cookie without SameSite Attribute</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;A cookie has been set without the SameSite attribute, which means that the cookie can be sent as a result of a &apos;cross-site&apos; request. The SameSite attribute is an effective counter measure to cross-site request forgery, cross-site script inclusion, and timing attacks.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param>NID</param>
									<attack></attack>
									<evidence>Set-Cookie: NID</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that the SameSite attribute is set to either &apos;lax&apos; or ideally &apos;strict&apos; for all cookies.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/draft-ietf-httpbis-cookie-same-site&lt;/p&gt;</reference>
						<cweid>1275</cweid>
						<wascid>13</wascid>
						<sourceid>1241</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035-1</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;https://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>1241</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10021</pluginid>
						<alertRef>10021</alertRef>
						<alert>X-Content-Type-Options Header Missing</alert>
						<name>X-Content-Type-Options Header Missing</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to &apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1241</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90011</pluginid>
						<alertRef>90011</alertRef>
						<alert>Charset Mismatch (Header Versus Meta Content-Type Charset)</alert>
						<name>Charset Mismatch (Header Versus Meta Content-Type Charset)</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there&apos;s a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content&apos;s correct character set.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;An attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [ISO-8859-1] and [UTF-8] do not match.</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Force UTF-8 for all text content in both the HTTP header and meta tags in HTML or encoding declarations in XML.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [ISO-8859-1] and [UTF-8] do not match.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://code.google.com/p/browsersec/wiki/Part2#Character_set_handling_and_detection&lt;/p&gt;</reference>
						<cweid>436</cweid>
						<wascid>15</wascid>
						<sourceid>1241</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10038</pluginid>
						<alertRef>10038-3</alertRef>
						<alert>Content Security Policy (CSP) Report-Only Header Found</alert>
						<name>Content Security Policy (CSP) Report-Only Header Found</name>
						<riskcode>0</riskcode>
						<confidence>3</confidence>
						<riskdesc>Informational (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The response contained a Content-Security-Policy-Report-Only header, this may indicate a work-in-progress implementation, or an oversight in promoting pre-Prod to Prod, etc.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://www.w3.org/TR/CSP2/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-csp/&lt;/p&gt;&lt;p&gt;https://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1241</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90033</pluginid>
						<alertRef>90033</alertRef>
						<alert>Loosely Scoped Cookie</alert>
						<name>Loosely Scoped Cookie</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com. Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>The origin domain used for comparison was:
www.google.com
AEC=AVcja2cDnUxTXMgr0HVl4gkgvXiTiotEDb55UCYZzPctMfD3OmWWsadjA6o
NID=523=CA7hoJ4BqM77KLEr6Vzl35ySopvA3xdK7JI6AdcVgWpFPj3-1GUiXMdqYk13KmTNo6SzIdll9xWWn3WDh-V_-ZBClNeIFUjAPTHrxi5vf7dkndq7mmipEd11LscgJUKYeMKaSV8xoyW8m3bjHxda9xzDOzuviLvY4tF46Fe7KL8uieI5Rk67S7pRSsTXb-MjSs1mKyWWz5u1Sd33dA
</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>The origin domain used for comparison was:
www.google.com
AEC=AVcja2dKOSNuKwsn-dJVK2xtYfg2NlRGYHQqBTX2MeMxrwQcSxqkutiZVg
NID=523=Ku6sElQySn3ZDr0UT4TEVU6k7npj_VEyTpL1_a8IiqnZooWoSlwPTL0lhQ2r21XdbiWvoYEcArqNTe84yf6MPEXLq7AjztLYv0KTiHNGXKVR1fCY5h_Jp5jj-t68Q2l0rv-9j5LOUbfd2vfHuw2HwYwtu_HNEYPPNkGVQQ3FKq5a4JgvrTNntmriGxwebNyymPuiblODYkDwHbCB2w
</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Always scope cookies to a FQDN (Fully Qualified Domain Name).&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The origin domain used for comparison was:&lt;/p&gt;&lt;p&gt;www.google.com&lt;/p&gt;&lt;p&gt;AEC=AVcja2cDnUxTXMgr0HVl4gkgvXiTiotEDb55UCYZzPctMfD3OmWWsadjA6o&lt;/p&gt;&lt;p&gt;NID=523=CA7hoJ4BqM77KLEr6Vzl35ySopvA3xdK7JI6AdcVgWpFPj3-1GUiXMdqYk13KmTNo6SzIdll9xWWn3WDh-V_-ZBClNeIFUjAPTHrxi5vf7dkndq7mmipEd11LscgJUKYeMKaSV8xoyW8m3bjHxda9xzDOzuviLvY4tF46Fe7KL8uieI5Rk67S7pRSsTXb-MjSs1mKyWWz5u1Sd33dA&lt;/p&gt;&lt;p&gt;&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc6265#section-4.1&lt;/p&gt;&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v41/4-Web_Application_Security_Testing/06-Session_Management_Testing/02-Testing_for_Cookies_Attributes.html&lt;/p&gt;&lt;p&gt;https://code.google.com/p/browsersec/wiki/Part2#Same-origin_policy_for_cookies&lt;/p&gt;</reference>
						<cweid>565</cweid>
						<wascid>15</wascid>
						<sourceid>1437</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10015</pluginid>
						<alertRef>10015</alertRef>
						<alert>Re-examine Cache-control Directives</alert>
						<name>Re-examine Cache-control Directives</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The cache-control header has not been set properly or is missing, allowing the browser and proxies to cache content. For static assets like css, js, or image files this might be intended, however, the resources should be reviewed to ensure that no sensitive content will be cached.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param>cache-control</param>
									<attack></attack>
									<evidence>private, max-age=0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;For secure content, ensure the cache-control HTTP header is set with &quot;no-cache, no-store, must-revalidate&quot;. If an asset should be cached consider setting the directives &quot;public, max-age, immutable&quot;.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Session_Management_Cheat_Sheet.html#web-content-caching&lt;/p&gt;&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Cache-Control&lt;/p&gt;&lt;p&gt;https://grayduck.mn/2021/09/13/cache-control-recommendations/&lt;/p&gt;</reference>
						<cweid>525</cweid>
						<wascid>13</wascid>
						<sourceid>1241</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10112</pluginid>
						<alertRef>10112</alertRef>
						<alert>Session Management Response Identified</alert>
						<name>Session Management Response Identified</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The given response has been identified as containing a session management token. The &apos;Other Info&apos; field contains a set of header tokens that can be used in the Header Based Session Management Method. If the request is in a context which has a Session Management Method set to &quot;Auto-Detect&quot; then this rule will change the session management to use the tokens identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param>NID</param>
									<attack></attack>
									<evidence>523=CA7hoJ4BqM77KLEr6Vzl35ySopvA3xdK7JI6AdcVgWpFPj3-1GUiXMdqYk13KmTNo6SzIdll9xWWn3WDh-V_-ZBClNeIFUjAPTHrxi5vf7dkndq7mmipEd11LscgJUKYeMKaSV8xoyW8m3bjHxda9xzDOzuviLvY4tF46Fe7KL8uieI5Rk67S7pRSsTXb-MjSs1mKyWWz5u1Sd33dA</evidence>
									<otherinfo>
cookie:NID
cookie:AEC</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://www.google.com/</uri>
									<method>GET</method>
									<param>NID</param>
									<attack></attack>
									<evidence>523=Ku6sElQySn3ZDr0UT4TEVU6k7npj_VEyTpL1_a8IiqnZooWoSlwPTL0lhQ2r21XdbiWvoYEcArqNTe84yf6MPEXLq7AjztLYv0KTiHNGXKVR1fCY5h_Jp5jj-t68Q2l0rv-9j5LOUbfd2vfHuw2HwYwtu_HNEYPPNkGVQQ3FKq5a4JgvrTNntmriGxwebNyymPuiblODYkDwHbCB2w</evidence>
									<otherinfo>
cookie:NID
cookie:AEC</otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;&lt;/p&gt;&lt;p&gt;cookie:NID&lt;/p&gt;&lt;p&gt;cookie:AEC&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/session-mgmt-id&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1437</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="https://googl.com" host="googl.com" port="443" ssl="true">
			<alerts>
				
					<alertitem>
						<pluginid>10038</pluginid>
						<alertRef>10038-1</alertRef>
						<alert>Content Security Policy (CSP) Header Not Set</alert>
						<name>Content Security Policy (CSP) Header Not Set</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://googl.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googl.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>2</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-csp/&lt;/p&gt;&lt;p&gt;https://web.dev/articles/csp&lt;/p&gt;&lt;p&gt;https://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>1250</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10035</pluginid>
						<alertRef>10035-1</alertRef>
						<alert>Strict-Transport-Security Header Not Set</alert>
						<name>Strict-Transport-Security Header Not Set</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;HTTP Strict Transport Security (HSTS) is a web security policy mechanism whereby a web server declares that complying user agents (such as a web browser) are to interact with it using only secure HTTPS connections (i.e. HTTP layered over TLS/SSL). HSTS is an IETF standards track protocol and is specified in RFC 6797.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://googl.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googl.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googl.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googl.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>4</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to enforce Strict-Transport-Security.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/HTTP_Strict_Transport_Security_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;&lt;p&gt;https://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security&lt;/p&gt;&lt;p&gt;https://caniuse.com/stricttransportsecurity&lt;/p&gt;&lt;p&gt;https://datatracker.ietf.org/doc/html/rfc6797&lt;/p&gt;</reference>
						<cweid>319</cweid>
						<wascid>15</wascid>
						<sourceid>1247</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10050</pluginid>
						<alertRef>10050-2</alertRef>
						<alert>Retrieved from Cache</alert>
						<name>Retrieved from Cache</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The content was retrieved from a shared cache. If the response data is sensitive, personal or user-specific, this may result in sensitive information being leaked. In some cases, this may even result in a user gaining complete control of the session of another user, depending on the configuration of the caching components in use in their environment. This is primarily an issue where caching servers such as &quot;proxy&quot; caches are configured on the local network. This configuration is typically found in corporate or educational environments, for instance.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>https://googl.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Age: 1351</evidence>
									<otherinfo>The presence of the &apos;Age&apos; header indicates that a HTTP/1.1 compliant caching server is in use.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googl.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Age: 1350</evidence>
									<otherinfo>The presence of the &apos;Age&apos; header indicates that a HTTP/1.1 compliant caching server is in use.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>https://googl.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>Age: 1352</evidence>
									<otherinfo>The presence of the &apos;Age&apos; header indicates that a HTTP/1.1 compliant caching server is in use.</otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Validate that the response does not contain sensitive, personal or user-specific information. If it does, consider the use of the following HTTP response headers, to limit, or prevent the content being stored and retrieved from the cache by another user:&lt;/p&gt;&lt;p&gt;Cache-Control: no-cache, no-store, must-revalidate, private&lt;/p&gt;&lt;p&gt;Pragma: no-cache&lt;/p&gt;&lt;p&gt;Expires: 0&lt;/p&gt;&lt;p&gt;This configuration directs both HTTP 1.0 and HTTP 1.1 compliant caching servers to not store the response, and to not retrieve the response (without validation) from the cache, in response to a similar request.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;The presence of the &apos;Age&apos; header indicates that a HTTP/1.1 compliant caching server is in use.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://tools.ietf.org/html/rfc7234&lt;/p&gt;&lt;p&gt;https://tools.ietf.org/html/rfc7231&lt;/p&gt;&lt;p&gt;https://www.rfc-editor.org/rfc/rfc9110.html&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>1247</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
	
		<site name="http://testphp.vulnweb.com" host="testphp.vulnweb.com" port="80" ssl="false">
			<alerts>
				
					<alertitem>
						<pluginid>10202</pluginid>
						<alertRef>10202</alertRef>
						<alert>Absence of Anti-CSRF Tokens</alert>
						<name>Absence of Anti-CSRF Tokens</name>
						<riskcode>2</riskcode>
						<confidence>1</confidence>
						<riskdesc>Medium (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;No Anti-CSRF tokens were found in a HTML submission form.&lt;/p&gt;&lt;p&gt;A cross-site request forgery is an attack that involves forcing a victim to send an HTTP request to a target destination without their knowledge or intent in order to perform an action as the victim. The underlying cause is application functionality using predictable URL/form actions in a repeatable way. The nature of the attack is that CSRF exploits the trust that a web site has for a user. By contrast, cross-site scripting (XSS) exploits the trust that a user has for a web site. Like XSS, CSRF attacks are not necessarily cross-site, but they can be. Cross-site request forgery is also known as CSRF, XSRF, one-click attack, session riding, confused deputy, and sea surf.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF attacks are effective in a number of situations, including:&lt;/p&gt;&lt;p&gt;    * The victim has an active session on the target site.&lt;/p&gt;&lt;p&gt;    * The victim is authenticated via HTTP auth on the target site.&lt;/p&gt;&lt;p&gt;    * The victim is on the same local network as the target site.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;CSRF has primarily been used to perform an action against a target site using the victim&apos;s privileges, but recent techniques have been discovered to disclose information by gaining access to the response. The risk of information disclosure is dramatically increased when the target site is vulnerable to XSS, because XSS can be used as a platform for CSRF, allowing the attack to operate within the bounds of the same-origin policy.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/categories.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/disclaimer.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;&quot; method=&quot;post&quot; name=&quot;faddentry&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;name&quot; &quot;submit&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&quot;loginform&quot; method=&quot;post&quot; action=&quot;userinfo.php&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;pass&quot; &quot;uname&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&apos;f_addcart&apos; method=&apos;POST&apos; action=&apos;cart.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;addcart&quot; &quot;price&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&apos;f_addcart&apos; method=&apos;POST&apos; action=&apos;cart.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;addcart&quot; &quot;price&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&apos;f_addcart&apos; method=&apos;POST&apos; action=&apos;cart.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;addcart&quot; &quot;price&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&apos;f_addcart&apos; method=&apos;POST&apos; action=&apos;cart.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;addcart&quot; &quot;price&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=5</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&apos;f_addcart&apos; method=&apos;POST&apos; action=&apos;cart.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;addcart&quot; &quot;price&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=5</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=6</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&apos;f_addcart&apos; method=&apos;POST&apos; action=&apos;cart.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;addcart&quot; &quot;price&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=6</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=7</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&apos;f_addcart&apos; method=&apos;POST&apos; action=&apos;cart.php&apos;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;addcart&quot; &quot;price&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=7</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/signup.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form name=&quot;form1&quot; method=&quot;post&quot; action=&quot;/secured/newuser.php&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;signup&quot; &quot;ucc&quot; &quot;uemail&quot; &quot;upass&quot; &quot;upass2&quot; &quot;uphone&quot; &quot;urname&quot; &quot;uuname&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/signup.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;&quot; method=&quot;post&quot; name=&quot;faddentry&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;name&quot; &quot;submit&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 2: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;form action=&quot;search.php?test=query&quot; method=&quot;post&quot;&gt;</evidence>
									<otherinfo>No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].</otherinfo>
								</instance>
							
						</instances>
						<count>42</count>
						<solution>&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Use a vetted library or framework that does not allow this weakness to occur or provides constructs that make this weakness easier to avoid.&lt;/p&gt;&lt;p&gt;For example, use anti-CSRF packages such as the OWASP CSRFGuard.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;Ensure that your application is free of cross-site scripting issues, because most CSRF defenses can be bypassed using attacker-controlled script.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Architecture and Design&lt;/p&gt;&lt;p&gt;Generate a unique nonce for each form, place the nonce into the form, and verify the nonce upon receipt of the form. Be sure that the nonce is not predictable (CWE-330).&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Identify especially dangerous operations. When the user performs a dangerous operation, send a separate confirmation request to ensure that the user intended to perform that operation.&lt;/p&gt;&lt;p&gt;Note that this can be bypassed using XSS.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Use the ESAPI Session Management control.&lt;/p&gt;&lt;p&gt;This control includes a component for CSRF.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Do not use the GET method for any request that triggers a state change.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;Phase: Implementation&lt;/p&gt;&lt;p&gt;Check the HTTP Referer header to see if the request originated from an expected page. This could break legitimate functionality, because users or proxies may have disabled sending the Referer for privacy reasons.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;No known Anti-CSRF token [anticsrf, CSRFToken, __RequestVerificationToken, csrfmiddlewaretoken, authenticity_token, OWASP_CSRFTOKEN, anoncsrf, csrf_token, _csrf, _csrfSecret, __csrf_magic, CSRF, _token, _csrf_token, _csrfToken] was found in the following HTML form: [Form 1: &quot;goButton&quot; &quot;searchFor&quot; ].&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://cwe.mitre.org/data/definitions/352.html&lt;/p&gt;</reference>
						<cweid>352</cweid>
						<wascid>9</wascid>
						<sourceid>9</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10038</pluginid>
						<alertRef>10038-1</alertRef>
						<alert>Content Security Policy (CSP) Header Not Set</alert>
						<name>Content Security Policy (CSP) Header Not Set</name>
						<riskcode>2</riskcode>
						<confidence>3</confidence>
						<riskdesc>Medium (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;Content Security Policy (CSP) is an added layer of security that helps to detect and mitigate certain types of attacks, including Cross Site Scripting (XSS) and data injection attacks. These attacks are used for everything from data theft to site defacement or distribution of malware. CSP provides a set of standard HTTP headers that allow website owners to declare approved sources of content that browsers should be allowed to load on that page &#x2014; covered types are JavaScript, CSS, HTML frames, fonts, images and embeddable objects such as Java applets, ActiveX, audio and video files.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/categories.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/disclaimer.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/high</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/?pp=12</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/params.php?p=valid&amp;pp=12</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-1.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-2.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-3.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/privacy.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=5</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=6</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=7</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/signup.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>66</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to set the Content-Security-Policy header.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/Security/CSP/Introducing_Content_Security_Policy&lt;/p&gt;&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Content_Security_Policy_Cheat_Sheet.html&lt;/p&gt;&lt;p&gt;https://www.w3.org/TR/CSP/&lt;/p&gt;&lt;p&gt;https://w3c.github.io/webappsec-csp/&lt;/p&gt;&lt;p&gt;https://web.dev/articles/csp&lt;/p&gt;&lt;p&gt;https://caniuse.com/#feat=contentsecuritypolicy&lt;/p&gt;&lt;p&gt;https://content-security-policy.com/&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>9</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10033</pluginid>
						<alertRef>10033</alertRef>
						<alert>Directory Browsing</alert>
						<name>Directory Browsing</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;It is possible to view a listing of the directory contents. Directory listings may reveal hidden scripts, include files, backup source files, etc., which can be accessed to reveal sensitive information.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /Flash/&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /images/&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;title&gt;Index of /Mod_Rewrite_Shop/images/&lt;/title&gt;</evidence>
									<otherinfo>Web server identified: Apache 2</otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Configure the web server to disable directory browsing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Web server identified: Apache 2&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cwe.mitre.org/data/definitions/548.html&lt;/p&gt;</reference>
						<cweid>548</cweid>
						<wascid>16</wascid>
						<sourceid>332</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10020</pluginid>
						<alertRef>10020-1</alertRef>
						<alert>Missing Anti-clickjacking Header</alert>
						<name>Missing Anti-clickjacking Header</name>
						<riskcode>2</riskcode>
						<confidence>2</confidence>
						<riskdesc>Medium (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The response does not protect against &apos;ClickJacking&apos; attacks. It should include either Content-Security-Policy with &apos;frame-ancestors&apos; directive or X-Frame-Options.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/index.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=1</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=2</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=3</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/categories.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/disclaimer.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/?pp=12</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/params.php?p=valid&amp;pp=12</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/index.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=1</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=2</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=3</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=1</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=2</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=3</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=4</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/login.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-1.html</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-2.html</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-3.html</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=1</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=2</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=3</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=4</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=5</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=6</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=7</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/signup.php</uri>
									<method>GET</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>POST</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>POST</method>
									<param>x-frame-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>51</count>
						<solution>&lt;p&gt;Modern Web browsers support the Content-Security-Policy and X-Frame-Options HTTP headers. Ensure one of them is set on all web pages returned by your site/app.&lt;/p&gt;&lt;p&gt;If you expect the page to be framed only by pages on your server (e.g. it&apos;s part of a FRAMESET) then you&apos;ll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY. Alternatively consider implementing Content Security Policy&apos;s &quot;frame-ancestors&quot; directive.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Frame-Options&lt;/p&gt;</reference>
						<cweid>1021</cweid>
						<wascid>15</wascid>
						<sourceid>9</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10037</pluginid>
						<alertRef>10037</alertRef>
						<alert>Server Leaks Information via &quot;X-Powered-By&quot; HTTP Response Header Field(s)</alert>
						<name>Server Leaks Information via &quot;X-Powered-By&quot; HTTP Response Header Field(s)</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking information via one or more &quot;X-Powered-By&quot; HTTP response headers. Access to such information may facilitate attackers identifying other frameworks/components your web application is reliant upon and the vulnerabilities such components may be subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/categories.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/disclaimer.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/?pp=12</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/params.php?p=valid&amp;pp=12</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-1.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-2.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-3.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/privacy.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=5</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=6</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=7</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=&apos;%20+%20pict.item(0).firstChild.nodeValue%20+%20&apos;</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/1.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/1.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/2.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/2.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/3.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/3.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/4.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/4.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/5.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/5.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/6.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/6.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/7.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/7.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/signup.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/userinfo.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/userinfo.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>X-Powered-By: PHP/5.6.40-38+ubuntu20.04.1+deb.sury.org+1</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>67</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress &quot;X-Powered-By&quot; headers.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://owasp.org/www-project-web-security-testing-guide/v42/4-Web_Application_Security_Testing/01-Information_Gathering/08-Fingerprint_Web_Application_Framework&lt;/p&gt;&lt;p&gt;https://www.troyhunt.com/2012/02/shhh-dont-let-your-response-headers.html&lt;/p&gt;</reference>
						<cweid>497</cweid>
						<wascid>13</wascid>
						<sourceid>9</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10036</pluginid>
						<alertRef>10036</alertRef>
						<alert>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</alert>
						<name>Server Leaks Version Information via &quot;Server&quot; HTTP Response Header Field</name>
						<riskcode>1</riskcode>
						<confidence>3</confidence>
						<riskdesc>Low (High)</riskdesc>
						<confidencedesc>High</confidencedesc>
						<desc>&lt;p&gt;The web/application server is leaking version information via the &quot;Server&quot; HTTP response header. Access to such information may facilitate attackers identifying other vulnerabilities your web/application server is subject to.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/styles.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/categories.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/disclaimer.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/add.fla</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/add.swf</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/high</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/?pp=12</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/params.php?p=valid&amp;pp=12</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/logo.gif</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/remark.gif</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/1.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/2.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/3.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-1.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-2.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-3.html</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/privacy.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=5</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=6</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=7</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/robots.txt</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/style.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=&apos;%20+%20pict.item(0).firstChild.nodeValue%20+%20&apos;</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/1.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/1.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/2.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/2.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/3.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/3.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/4.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/4.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/5.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/5.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/6.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/6.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/7.jpg</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/7.jpg&amp;size=160</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/signup.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/sitemap.xml</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/style.css</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/userinfo.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/userinfo.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence>nginx/1.19.0</evidence>
									<otherinfo></otherinfo>
								</instance>
							
						</instances>
						<count>100</count>
						<solution>&lt;p&gt;Ensure that your web server, application server, load balancer, etc. is configured to suppress the &quot;Server&quot; header or provide generic details.&lt;/p&gt;</solution>
						<otherinfo></otherinfo>
						<reference>&lt;p&gt;https://httpd.apache.org/docs/current/mod/core.html#servertokens&lt;/p&gt;&lt;p&gt;https://learn.microsoft.com/en-us/previous-versions/msp-n-p/ff648552(v=pandp.10)&lt;/p&gt;&lt;p&gt;https://www.troyhunt.com/shhh-dont-let-your-response-headers/&lt;/p&gt;</reference>
						<cweid>497</cweid>
						<wascid>13</wascid>
						<sourceid>9</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10021</pluginid>
						<alertRef>10021</alertRef>
						<alert>X-Content-Type-Options Header Missing</alert>
						<name>X-Content-Type-Options Header Missing</name>
						<riskcode>1</riskcode>
						<confidence>2</confidence>
						<riskdesc>Low (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The Anti-MIME-Sniffing header X-Content-Type-Options was not set to &apos;nosniff&apos;. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/index.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/styles.css</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=1</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=2</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=3</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/categories.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/disclaimer.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/add.fla</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Flash/add.swf</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/?pp=12</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/hpp/params.php?p=valid&amp;pp=12</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/logo.gif</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/images/remark.gif</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/index.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=1</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=2</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=3</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=1</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=2</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=3</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=4</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/login.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-1/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-2/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/BuyProduct-3/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/color-printer/3/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/network-attached-storage-dlink/1/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/Details/web-camera-a4tech/2/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/1.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/2.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/images/3.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-1.html</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-2.html</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/Mod_Rewrite_Shop/RateProduct-3.html</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=1</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=2</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=3</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=4</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=5</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=6</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=7</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/style.css</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=&apos;%20+%20pict.item(0).firstChild.nodeValue%20+%20&apos;</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/1.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/1.jpg&amp;size=160</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/2.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/2.jpg&amp;size=160</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/3.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/3.jpg&amp;size=160</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/4.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/4.jpg&amp;size=160</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/5.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/5.jpg&amp;size=160</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/6.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/6.jpg&amp;size=160</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/7.jpg</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/showimage.php?file=./pictures/7.jpg&amp;size=160</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/signup.php</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/style.css</uri>
									<method>GET</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>POST</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>POST</method>
									<param>x-content-type-options</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.</otherinfo>
								</instance>
							
						</instances>
						<count>76</count>
						<solution>&lt;p&gt;Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to &apos;nosniff&apos; for all web pages.&lt;/p&gt;&lt;p&gt;If possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;This issue still applies to error type pages (401, 403, 500, etc.) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.&lt;/p&gt;&lt;p&gt;At &quot;High&quot; threshold this scan rule will not alert on client or server error responses.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://learn.microsoft.com/en-us/previous-versions/windows/internet-explorer/ie-developer/compatibility/gg622941(v=vs.85)&lt;/p&gt;&lt;p&gt;https://owasp.org/www-community/Security_Headers&lt;/p&gt;</reference>
						<cweid>693</cweid>
						<wascid>15</wascid>
						<sourceid>9</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10111</pluginid>
						<alertRef>10111</alertRef>
						<alert>Authentication Request Identified</alert>
						<name>Authentication Request Identified</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;The given request has been identified as an authentication request. The &apos;Other Info&apos; field contains a set of key=value lines which identify any relevant fields. If the request is in a context which has an Authentication Method set to &quot;Auto-Detect&quot; then this rule will change the authentication to match the request identified.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>POST</method>
									<param>uemail</param>
									<attack></attack>
									<evidence>upass</evidence>
									<otherinfo>userParam=uemail
userValue=ZAP
passwordParam=upass
referer=http://testphp.vulnweb.com/signup.php</otherinfo>
								</instance>
							
						</instances>
						<count>1</count>
						<solution>&lt;p&gt;This is an informational alert rather than a vulnerability and so there is nothing to fix.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;userParam=uemail&lt;/p&gt;&lt;p&gt;userValue=ZAP&lt;/p&gt;&lt;p&gt;passwordParam=upass&lt;/p&gt;&lt;p&gt;referer=http://testphp.vulnweb.com/signup.php&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://www.zaproxy.org/docs/desktop/addons/authentication-helper/auth-req-id/&lt;/p&gt;</reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>162</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>90011</pluginid>
						<alertRef>90011</alertRef>
						<alert>Charset Mismatch (Header Versus Meta Content-Type Charset)</alert>
						<name>Charset Mismatch (Header Versus Meta Content-Type Charset)</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there&apos;s a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content&apos;s correct character set.&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;An attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/categories.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/disclaimer.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/login.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=4</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=5</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=6</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/product.php?pic=7</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-1] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/signup.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/cart.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/secured/newuser.php</uri>
									<method>POST</method>
									<param></param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-1] do not match.</otherinfo>
								</instance>
							
						</instances>
						<count>35</count>
						<solution>&lt;p&gt;Force UTF-8 for all text content in both the HTTP header and meta tags in HTML or encoding declarations in XML.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;There was a charset mismatch between the HTTP Header and the META content-type encoding declarations: [UTF-8] and [iso-8859-2] do not match.&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://code.google.com/p/browsersec/wiki/Part2#Character_set_handling_and_detection&lt;/p&gt;</reference>
						<cweid>436</cweid>
						<wascid>15</wascid>
						<sourceid>9</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10109</pluginid>
						<alertRef>10109</alertRef>
						<alert>Modern Web Application</alert>
						<name>Modern Web Application</name>
						<riskcode>0</riskcode>
						<confidence>2</confidence>
						<riskdesc>Informational (Medium)</riskdesc>
						<confidencedesc>Medium</confidencedesc>
						<desc>&lt;p&gt;The application appears to be a modern web application. If you need to explore it automatically then the Ajax Spider may well be more effective than the standard one.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&quot;#&quot; onclick=&quot;loadSomething(&apos;titles.php&apos;)&quot;&gt;titles&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/AJAX/index.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&quot;#&quot; onclick=&quot;loadSomething(&apos;titles.php&apos;)&quot;&gt;titles&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&apos;#&apos; onClick=&quot;window.open(&apos;./comment.php?aid=1&apos;,&apos;comment&apos;,&apos;width=500,height=400&apos;)&quot;&gt;comment on this artist&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&apos;#&apos; onClick=&quot;window.open(&apos;./comment.php?aid=1&apos;,&apos;comment&apos;,&apos;width=500,height=400&apos;)&quot;&gt;comment on this artist&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&apos;#&apos; onClick=&quot;window.open(&apos;./comment.php?aid=2&apos;,&apos;comment&apos;,&apos;width=500,height=400&apos;)&quot;&gt;comment on this artist&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/artists.php?artist=3</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&apos;#&apos; onClick=&quot;window.open(&apos;./comment.php?aid=3&apos;,&apos;comment&apos;,&apos;width=500,height=400&apos;)&quot;&gt;comment on this artist&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&apos;#&apos; onClick=&quot;window.open(&apos;./comment.php?pid=1&apos;,&apos;comment&apos;,&apos;width=500,height=400&apos;)&quot;&gt;comment on this picture&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?artist=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&apos;#&apos; onClick=&quot;window.open(&apos;./comment.php?pid=7&apos;,&apos;comment&apos;,&apos;width=500,height=400&apos;)&quot;&gt;comment on this picture&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=1</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&apos;#&apos; onClick=&quot;window.open(&apos;./comment.php?pid=1&apos;,&apos;comment&apos;,&apos;width=500,height=400&apos;)&quot;&gt;comment on this picture&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/listproducts.php?cat=2</uri>
									<method>GET</method>
									<param></param>
									<attack></attack>
									<evidence>&lt;a href=&apos;#&apos; onClick=&quot;window.open(&apos;./comment.php?pid=6&apos;,&apos;comment&apos;,&apos;width=500,height=400&apos;)&quot;&gt;comment on this picture&lt;/a&gt;</evidence>
									<otherinfo>Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.</otherinfo>
								</instance>
							
						</instances>
						<count>10</count>
						<solution>&lt;p&gt;This is an informational alert and so no changes are required.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;Links have been found that do not have traditional href attributes, which is an indication that this is a modern web application.&lt;/p&gt;</otherinfo>
						<reference></reference>
						<cweid>-1</cweid>
						<wascid>-1</wascid>
						<sourceid>313</sourceid>
					</alertitem>
				
				
					<alertitem>
						<pluginid>10031</pluginid>
						<alertRef>10031</alertRef>
						<alert>User Controllable HTML Element Attribute (Potential XSS)</alert>
						<name>User Controllable HTML Element Attribute (Potential XSS)</name>
						<riskcode>0</riskcode>
						<confidence>1</confidence>
						<riskdesc>Informational (Low)</riskdesc>
						<confidencedesc>Low</confidencedesc>
						<desc>&lt;p&gt;This check looks at user-supplied input in query string parameters and POST data to identify where certain HTML attribute values might be controlled. This provides hot-spot detection for XSS (cross-site scripting) that will require further review by a security analyst to determine exploitability.&lt;/p&gt;</desc>
						<instances>
							
								<instance>
									<uri>http://testphp.vulnweb.com/guestbook.php</uri>
									<method>POST</method>
									<param>submit</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://testphp.vulnweb.com/guestbook.php

appears to include user input in:
a(n) [input] tag [value] attribute

The user input found was:
submit=add message

The user-controlled value was:
add message</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param>goButton</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://testphp.vulnweb.com/search.php?test=query

appears to include user input in:
a(n) [input] tag [name] attribute

The user input found was:
goButton=go

The user-controlled value was:
gobutton</otherinfo>
								</instance>
							
							
								<instance>
									<uri>http://testphp.vulnweb.com/search.php?test=query</uri>
									<method>POST</method>
									<param>goButton</param>
									<attack></attack>
									<evidence></evidence>
									<otherinfo>User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:

http://testphp.vulnweb.com/search.php?test=query

appears to include user input in:
a(n) [input] tag [value] attribute

The user input found was:
goButton=go

The user-controlled value was:
go</otherinfo>
								</instance>
							
						</instances>
						<count>3</count>
						<solution>&lt;p&gt;Validate all input and sanitize output it before writing to any HTML attributes.&lt;/p&gt;</solution>
						<otherinfo>&lt;p&gt;User-controlled HTML attribute values were found. Try injecting special characters to see if XSS might be possible. The page at the following URL:&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;http://testphp.vulnweb.com/guestbook.php&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;appears to include user input in:&lt;/p&gt;&lt;p&gt;a(n) [input] tag [value] attribute&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The user input found was:&lt;/p&gt;&lt;p&gt;submit=add message&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;The user-controlled value was:&lt;/p&gt;&lt;p&gt;add message&lt;/p&gt;</otherinfo>
						<reference>&lt;p&gt;https://cheatsheetseries.owasp.org/cheatsheets/Input_Validation_Cheat_Sheet.html&lt;/p&gt;</reference>
						<cweid>20</cweid>
						<wascid>20</wascid>
						<sourceid>109</sourceid>
					</alertitem>
				
			</alerts>
		</site>
	
</OWASPZAPReport>